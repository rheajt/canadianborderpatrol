{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/mountains.png","webpack:///./src/components/seo.js","webpack:///./src/components/divider.js","webpack:///./src/components/container.js","webpack:///./src/theme/index.js","webpack:///./src/components/title.js","webpack:///./src/components/linkbar.js","webpack:///./src/components/header.js","webpack:///./src/components/bioitem.js","webpack:///./src/components/bio.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/simplegatsbylink.js","webpack:///./src/components/episodelistitem.js","webpack:///./src/components/episodelist.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_icons_io__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","_components_episodelist__WEBPACK_IMPORTED_MODULE_5__","_components_divider__WEBPACK_IMPORTED_MODULE_6__","_components_simplegatsbylink__WEBPACK_IMPORTED_MODULE_7__","SiteIndex","props","thePosts","data","allMarkdownRemark","edges","map","post","number","node","frontmatter","title","slug","fields","date","excerpt","a","createElement","keywords","posts","textAlign","fontSize","fontWeight","to","width","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","SEO","description","lang","meta","site","_public_static_d_3718716973_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","console","log","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","authors","social","twitter","concat","length","join","defaultProps","arrayOf","styled_components__WEBPACK_IMPORTED_MODULE_1__","rebass__WEBPACK_IMPORTED_MODULE_2__","Divider","flexWrap","justifyContent","my","StyledHr","styled","hr","withConfig","displayName","componentId","Container","react_default","_StyledBox","mx","_css","maxWidth","minWidth","GlobalStyle","createGlobalStyle","_templateObject","mountains","theme","breakpoints","fontSizes","colors","blue","lightgray","space","fonts","serif","sans","mono","shadows","small","large","Title","Logo","img","gatsby_browser_entry","titleQuery","siteTitle","dist","flex","src","alt","_3009533391","Component","LinkBar","flexDirection","alignItems","pr","StyledLink","href","index_esm","px","Link","Header","linkbar","BioItem","Avatar","bioImage","bioName","_StyledText","mt","mb","textDecoration","bioDescription","bioTwitter","bioQuery","Bio","bioWidth","author","ind","key","bioitem","avatar","alignImage","_2975466106","Footer","FootText","footer","Fragment","bio","Date","getFullYear","Layout","styled_components_browser_esm","container","header","Content","div","SimpleGatsbyLink","_StyledLink","color","EpisodeListItem","simplegatsbylink","ml","fontStyle","pl","shortExcerpt","EpisodeList","episodelistitem","divider"],"mappings":"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","file":"component---src-pages-index-js-78e5d97e50c6db31bbff.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport { IoMdArrowForward } from 'react-icons/io';\nimport { Flex, Text, Box } from 'rebass';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport EpisodeList from '../components/episodelist';\nimport Divider from '../components/divider';\nimport SimpleGatsbyLink from '../components/simplegatsbylink';\n\nconst SiteIndex = props => {\n  const { data } = props;\n  const thePosts = data.allMarkdownRemark.edges.map(post => {\n    return {\n      number: post.node.frontmatter.number,\n      title: post.node.frontmatter.title,\n      slug: post.node.fields.slug,\n      date: post.node.frontmatter.date,\n      excerpt: post.node.excerpt,\n    };\n  });\n\n  return (\n    <Layout>\n      <SEO\n        title=\"All posts\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n      <EpisodeList posts={thePosts} />\n      <SimpleGatsbyLink\n        textAlign=\"center\"\n        fontSize={[2, 3, 4]}\n        fontWeight=\"bold\"\n        to=\"/episodes/\"\n      >\n        All Episodes <IoMdArrowForward />\n      </SimpleGatsbyLink>\n      <Divider width={1 / 2} />\n    </Layout>\n  );\n};\n\nexport default SiteIndex;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 5\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            number\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/mountains-4f18cc1481d8cf98668cdf2d38ea2280.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            authors {\n              name\n              description\n              social {\n                twitter\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  console.log(site);\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.authors[0].social.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Flex, Box } from 'rebass';\n\nconst Divider = props => (\n  <Flex flexWrap=\"flex\" justifyContent=\"center\">\n    <Box width={props.width} my={2}>\n      <StyledHr />\n    </Box>\n  </Flex>\n);\n\nexport default Divider;\n\nconst StyledHr = styled.hr`\n  background-color: red;\n`;\n","import React from 'react';\nimport { Box } from 'rebass';\n\nconst Container = props => (\n  <Box\n    {...props}\n    mx=\"auto\"\n    p={2}\n    css={{\n      maxWidth: '1024px',\n      minWidth: '320px',\n    }}\n  />\n);\n\nexport default Container;\n","import { createGlobalStyle } from 'styled-components';\nimport mountains from '../assets/mountains.png';\n\nconst theme = {\n  breakpoints: ['26em', '40em', '54em'],\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64],\n  colors: {\n    blue: '#07c',\n    lightgray: '#f6f6ff',\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  fonts: {\n    serif: 'Libre Baskerville, Times New Roman, serif',\n    sans: 'system-ui, sans-serif',\n    mono: 'Menlo, monospace',\n  },\n  shadows: {\n    small: '0 0 4px rgba(0, 0, 0, .125)',\n    large: '0 0 24px rgba(0, 0, 0, .125)',\n  },\n};\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Libre+Baskerville:400,700');\n  html, body {\n    padding: 0;\n    margin: 0;\n    font-family: Helvetica, Arial, sans-serif;\n    background-image: url(${mountains});\n    background-size: cover;\n    background-position: center;\n    background-attachment: fixed;\n    box-sizing: border-box;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  a {\n    text-decoration: none;\n  }\n  ul {\n    margin: 0 auto;\n    padding: 0 auto;\n  }\n  ul p {\n    margin: 0 auto;\n  }\n`;\n\nexport default theme;\nexport { GlobalStyle };\n","import React from 'react';\nimport { StaticQuery, graphql, Link } from 'gatsby';\nimport { Flex, Box, Heading } from \"rebass\";\nimport styled from 'styled-components';\n\n// Logo styling trick allows automatic resizing,\n// but if container is larger than image size, the image won't center\n// Responsive widths are chosen to center the logo and keep it responsive\n\nclass Title extends React.Component {\n  render() {\n    const Logo = styled.img`\n      max-width: 100%;\n      height: auto;\n    `\n    const cbpSeal = '/cbp-logo-400.png'\n    return(\n      <StaticQuery\n        query={titleQuery}\n        render={data => {\n          const siteTitle = data.site.siteMetadata.title;\n          return(\n            <Flex width={1} justifyContent=\"center\">\n              <Box\n                width={[.5, null, 300]}\n                flex=\"0 1 auto\"\n              >\n                <Link to='/'>\n                  <Logo\n                    src={cbpSeal}\n                    alt={`${siteTitle} Seal`}\n                  />\n                </Link>\n              </Box>\n            </Flex>\n          )\n        }}\n      />\n    )\n  }\n}\n\nconst titleQuery = graphql`\n  query TitleQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n\nexport default Title;\n","import React from 'react';\nimport { Flex, Link, Text } from 'rebass';\nimport styled from 'styled-components';\nimport { FaItunesNote, FaRss, FaTwitter } from 'react-icons/fa';\n\nfunction LinkBar(props) {\n  const rssFeed =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:8000/rss.xml'\n      : 'https://canadianborderpatrol.com/rss.xml';\n  return (\n    <Flex\n      flexWrap=\"nowrap\"\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      p={2}\n      pr={2}\n    >\n      <Text fontSize={[2, 3, 4]}>\n        <StyledLink\n          // px={[1, 2]}\n          href=\"https://podcasts.apple.com/ca/podcast/canadian-border-patrol/id1463751515\"\n        >\n          <FaItunesNote /> iTunes\n        </StyledLink>\n        |\n        <StyledLink\n          px={[1, 2]}\n          href=\"https://www.stitcher.com/podcast/canadian-border-patrol?refid=stpr\"\n        >\n          Stitcher\n        </StyledLink>\n        |\n        <StyledLink px={[1, 2]} href={rssFeed}>\n          <FaRss /> Rss\n        </StyledLink>\n        |\n        <StyledLink px={[1, 2]} href=\"https://twitter.com/canborderpatrol\">\n          <FaTwitter /> Twitter\n        </StyledLink>\n      </Text>\n    </Flex>\n  );\n}\n\nexport default LinkBar;\n\nconst StyledLink = styled(Link)`\n  color: black;\n`;\n","import React from 'react';\nimport { Flex, Box } from 'rebass';\n\nimport Title from './title';\nimport LinkBar from './linkbar';\n\n\nclass Header extends React.Component {\n  render() {\n    return(\n    <Flex\n      width={1}\n      flexWrap='noflex'\n      flexDirection='column'\n      alignItems='center'\n    >\n      <Title />\n      <LinkBar />\n    </Flex>\n    )\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, Box, Text, Link } from 'rebass';\nimport styled from 'styled-components';\nimport { FaTwitter } from 'react-icons/fa';\n\nconst BioItem = props => {\n  return (\n    <Flex\n      flexWrap=\"nowrap\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      fontSize={[1, 2, 3]}\n    >\n      <Box>\n        <Avatar src={props.bioImage} alt={props.bioName} />\n      </Box>\n      <Text\n        mt={1}\n        mb={2}\n        fontWeight=\"bold\"\n        css={{ textDecoration: 'underline' }}\n      >\n        {props.bioName}\n      </Text>\n      <Text mb={1}>{props.bioDescription}</Text>\n      <Link href={`https://twitter.com/${props.bioTwitter}`}>\n        <FaTwitter />\n      </Link>\n    </Flex>\n  );\n};\n\nBioItem.propTypes = {\n  bioImage: PropTypes.string,\n  bioName: PropTypes.string,\n  bioDescription: PropTypes.string,\n  bioTwitter: PropTypes.string,\n};\n\nexport default BioItem;\n\nconst Avatar = styled.img`\n  width: auto;\n  max-height: 100px;\n  align-self: 'start';\n  border-radius: 100%;\n`;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { Flex, Box } from 'rebass';\nimport BioItem from './bioitem';\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { authors } = data.site.siteMetadata;\n        const bioWidth = 1 / authors.length;\n        return (\n          <Flex flexWrap=\"nowrap\" flexDirection=\"row\">\n            {authors.map((author, ind) => (\n              <Box\n                flex=\"1 1 auto\"\n                mx={2}\n                width={bioWidth}\n                key={`author-${ind}`}\n              >\n                <BioItem\n                  key={`${author.name}-${ind}`}\n                  bioImage={`/${author.avatar}`}\n                  bioName={author.name}\n                  bioDescription={author.description}\n                  bioTwitter={author.social.twitter}\n                  alignImage={ind % 2 !== 0 ? 'left' : 'right'}\n                />\n              </Box>\n            ))}\n          </Flex>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        authors {\n          name\n          description\n          avatar\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import React from 'react';\nimport { Box } from 'rebass';\nimport styled from 'styled-components';\n\nimport Bio from './bio';\n\nclass Footer extends React.Component {\n  render() {\n    const FootText = styled.footer`\n      text-align: center;\n    `;\n    return(\n      <>\n        <Bio />\n        <Box fontSize={0}>\n          <FootText>© {new Date().getFullYear()} Canadian Border Patrol</FootText>\n        </Box>\n      </>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Container from './container';\nimport theme, { GlobalStyle } from '../theme';\nimport Header from './header';\nimport Footer from './footer';\n\nfunction Layout({ children }) {\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <GlobalStyle />\n        <Header />\n        <Content>\n          <main>{children}</main>\n          <Footer />\n        </Content>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default Layout;\n\nconst Content = styled.div`\n  background-color: white;\n  padding: 3rem 3rem;\n  border-radius: 15px;\n`;\n","import React from 'react';\nimport { Text } from 'rebass';\nimport { Link } from 'gatsby';\n\nconst SimpleGatsbyLink = props => (\n  <Text\n    textAlign={props.textAlign}\n    fontSize={props.fontSize}\n    fontWeight={props.fontWeight}\n  >\n    <Link\n      to={props.to}\n      css={{\n        textDecoration: 'none',\n        color: 'inherit'\n      }}\n    >\n      {props.children}\n    </Link>\n  </Text>\n);\n\nexport default SimpleGatsbyLink;\n","import React from 'react';\nimport { Flex, Box, Text } from 'rebass';\n\nimport SimpleGatsbyLink from './simplegatsbylink';\n\nconst EpisodeListItem = props => (\n  <Flex flexWrap=\"nowrap\" flexDirection=\"column\" mx={2}>\n    <Flex flexWrap=\"wrap\" flexDirection=\"row\" alignItems=\"baseline\" mb={2}>\n      <SimpleGatsbyLink fontSize={[3, 4, 5]} fontWeight=\"bold\" to={props.slug}>\n        {props.title}\n      </SimpleGatsbyLink>\n      <Text fontSize={[0, 1, 2]} ml={2} css={{ fontStyle: 'italic' }}>\n        Ep. {props.number} - {props.date}\n      </Text>\n    </Flex>\n    <Text fontSize={[1, 2, 3]} pl={[2, 3, 4]}>{props.shortExcerpt}</Text>\n  </Flex>\n);\n\nexport default EpisodeListItem;\n","import React from 'react';\nimport { Flex } from 'rebass';\n\nimport EpisodeListItem from './episodelistitem';\nimport Divider from './divider';\n\nconst EpisodeList = props => (\n  <Flex flexWrap=\"nowrap\" flexDirection=\"column\" justifyContent=\"center\">\n    {/* <Divider width={1 / 2} /> */}\n    {props.posts.map(post => (\n      <React.Fragment key={post.slug}>\n        <EpisodeListItem\n          number={post.number}\n          title={post.title}\n          date={post.date}\n          slug={post.slug}\n          shortExcerpt={post.excerpt}\n        />\n        <Divider width={1 / 2} />\n      </React.Fragment>\n    ))}\n  </Flex>\n);\n\nexport default EpisodeList;\n"],"sourceRoot":""}