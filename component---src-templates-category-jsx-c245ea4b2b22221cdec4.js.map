{"version":3,"sources":["webpack:///./src/templates/category.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/assets/imgs/canadian-border-patrol-logo.png","webpack:///./src/components/Header.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/PostListing.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_5___default","siteTitle","_components_PostListing__WEBPACK_IMPORTED_MODULE_4__","Component","pageQuery","module","exports","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","googleAnalyticsID","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","themeColor","backgroundColor","__webpack_require__","p","HeaderStyled","styled_components_browser_esm","header","withConfig","displayName","componentId","components_Header","react_default","src","canadian_border_patrol_logo_default","alt","theme","primary","secondary","black","GlobalStyle","Object","_templateObject","layout_MainLayout","children","Fragment","Helmet_default","name","content","SiteConfig_default","PostListing","getPostList","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","react__WEBPACK_IMPORTED_MODULE_4___default","map","post","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","key","__webpack_exports__"],"mappings":"yQAOqBA,4FACnBC,kBAAS,IACCC,EAAaC,KAAKC,MAAMC,YAAxBH,SACFI,EAAYH,KAAKC,MAAMG,KAAKC,kBAAkBC,MACpD,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEK,MAAK,sBAAwBd,EAAxB,OAAuCe,EAAAN,EAAOO,YAErDR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAab,UAAWA,UAVYI,EAAAC,EAAMS,WAkBvCC,EAAS,gCCzBtBC,EAAOC,QAAU,CACfL,UAAW,yBACXM,eAAgB,MAChBC,aAAc,4CACdC,SAAU,uBACVC,QAAS,mCACTC,WAAY,IACZC,gBACE,+FACFC,QAAS,WACTC,kBAAmB,GAEnBC,sBAAuB,aACvBC,eAAgB,aAChBC,WAAY,aACZC,SAAU,sBAEVC,aAAc,gBACdC,WAAY,+CACZC,gBAAiB,qBAEjBC,UAAW,CACT,CACEC,MAAO,SACPC,IAAK,4BACLC,cAAe,gBAEjB,CACEF,MAAO,UACPC,IAAK,6BACLC,cAAe,kBAGnBC,UAAW,2CACXC,WAAY,OACZC,gBAAiB,gCCnCnBvB,EAAAC,QAAiBuB,EAAAC,EAAuB,+MCIlCC,EAAeC,EAAA,EAAOC,OAAVC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,4QAqCHK,4FAXbrD,kBACE,OACEsD,EAAA5C,EAAAC,cAACoC,EAAD,KACEO,EAAA5C,EAAAC,cAAA,OAAK4C,IAAKC,EAAA9C,EAAS+C,IAAI,gCACvBH,EAAA5C,EAAAC,cAAA,oCACA2C,EAAA5C,EAAAC,cAAA,+DANa2C,EAAA5C,EAAMS,kPCvB3B,IAAMuC,EAAQ,CACZC,QAAS,GACTC,UAAW,GACXC,MAAO,WAGHC,EAAcC,OAAAf,EAAA,EAAAe,CAAHC,KAeIC,4FACnBjE,kBAAS,IACCkE,EAAahE,KAAKC,MAAlB+D,SACR,OACEZ,EAAA5C,EAAAC,cAACqC,EAAA,EAAD,CAAeU,MAAOA,GACpBJ,EAAA5C,EAAAC,cAAC2C,EAAA5C,EAAMyD,SAAP,KACEb,EAAA5C,EAAAC,cAACyD,EAAA1D,EAAD,KACE4C,EAAA5C,EAAAC,cAAA,QAAM0D,KAAK,cAAcC,QAASC,EAAA7D,EAAOkB,mBAE3C0B,EAAA5C,EAAAC,cAACmD,EAAD,MACAR,EAAA5C,EAAAC,cAAC0C,EAAD,MACCa,QAX6BZ,EAAA5C,EAAMS,2GCxBxCqD,oGACJC,uBACE,IAAMC,EAAW,GAYjB,OAXAxE,KAAKC,MAAME,UAAUsE,QAAQ,SAAAC,GAC3BF,EAASG,KAAK,CACZC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAChCE,MAAOR,EAASG,KAAKI,YAAYC,MACjCrE,MAAO6D,EAASG,KAAKI,YAAYpE,MACjCsE,KAAMT,EAASG,KAAKC,OAAOK,KAC3BC,QAASV,EAASG,KAAKO,QACvBC,WAAYX,EAASG,KAAKQ,eAGvBb,KAET1E,kBACE,IAAM0E,EAAWxE,KAAKuE,cACtB,OACEe,EAAA9E,EAAAC,cAAA,WAEE+D,EAASe,IAAI,SAAAC,GAAI,OACfF,EAAA9E,EAAAC,cAACgF,EAAA,KAAD,CAAMC,GAAIF,EAAKZ,KAAMe,IAAKH,EAAK3E,OAC7ByE,EAAA9E,EAAAC,cAAA,UAAK+E,EAAK3E,eAvBIyE,EAAA9E,EAAMS,WA+BjB2E,EAAA","file":"component---src-templates-category-jsx-c245ea4b2b22221cdec4.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport PostListing from '../components/PostListing';\nimport config from '../../data/SiteConfig';\n\nexport default class CategoryTemplate extends React.Component {\n  render() {\n    const { category } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <div className=\"category-container\">\n          <Helmet\n            title={`Posts in category \"${category}\" | ${config.siteTitle}`}\n          />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = {\n  siteTitle: 'Canadian Border Patrol', // Site title.\n  siteTitleShort: 'CBP', // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: 'The realest, fake agency in North America', // Alternative site title for SEO.\n  siteLogo: '/logos/logo-1024.png', // Logo used for SEO and manifest.\n  siteUrl: 'https://canadianborderpatrol.com', // Domain of your website without pathPrefix.\n  pathPrefix: '/',\n  siteDescription:\n    'Investigating the important differences between the great border between two great countries', // Website description used for RSS feeds/meta description tag.\n  siteRss: '/rss.xml', // Path to the RSS file.\n  googleAnalyticsID: '', // GA tracking ID.\n  // disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // Disqus shortname.\n  postDefaultCategoryID: 'Discussion', // Default category for posts.\n  dateFromFormat: 'YYYY-MM-DD', // Date format used in the frontmatter.\n  dateFormat: 'DD/MM/YYYY', // Date format for display.\n  userName: 'Border Patrol Agent', // Username to display in the author segment.\n  // userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: 'North America', // User location to display in the author segment.\n  userAvatar: 'https://api.adorable.io/avatars/150/test.png', // User avatar to display in the author segment.\n  userDescription: 'Sharing is caring.', // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: 'GitHub',\n      url: 'https://github.com/rheajt',\n      iconClassName: 'fa fa-github'\n    },\n    {\n      label: 'Twitter',\n      url: 'https://twitter.com/rheajt',\n      iconClassName: 'fa fa-twitter'\n    }\n  ],\n  copyright: 'Copyright Â© 2019. Canadian Border Patrol', // Copyright string for the footer of the website and RSS feed.\n  themeColor: '#f00', // Used for setting manifest and progress theme colors.\n  backgroundColor: '#e0e0e0' // Used for setting manifest background color.\n};\n","module.exports = __webpack_public_path__ + \"static/canadian-border-patrol-logo-dbd916a61c1d95fcc19e58f40b222948.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport cbplogo from '../assets/imgs/canadian-border-patrol-logo.png';\n\nconst HeaderStyled = styled.header`\n  display: grid;\n  grid-template-columns: 1fr 3fr;\n  grid-template-rows: auto auto;\n  grid-template-areas:\n    'logo title'\n    'logo subtitle';\n  justify-items: center;\n  align-items: center;\n  width: 700px;\n  margin: 0 auto;\n  img {\n    grid-area: logo;\n    width: 300px;\n  }\n\n  h1 {\n    grid-area: title;\n  }\n\n  h4 {\n    grid-area: subtitle;\n  }\n`;\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <HeaderStyled>\n        <img src={cbplogo} alt=\"canadian border patrol logo\" />\n        <h1>Canadian Border Patrol</h1>\n        <h4>The Realest, Fake Border Agency in the World</h4>\n      </HeaderStyled>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport Header from '../components/Header';\nimport config from '../../data/SiteConfig';\n\nconst theme = {\n  primary: '',\n  secondary: '',\n  black: '#1f1f1f'\n};\n\nconst GlobalStyle = createGlobalStyle`\n* {\n    box-sizing: border-box;\n}\n\nhtml {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    padding: 20px;\n}\n`;\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          <Helmet>\n            <meta name=\"description\" content={config.siteDescription} />\n          </Helmet>\n          <GlobalStyle />\n          <Header />\n          {children}\n        </React.Fragment>\n      </ThemeProvider>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div>\n        {/* Your post list here. */\n        postList.map(post => (\n          <Link to={post.path} key={post.title}>\n            <h1>{post.title}</h1>\n          </Link>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}