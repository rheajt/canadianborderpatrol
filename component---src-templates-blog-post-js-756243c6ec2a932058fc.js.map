{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/mountains.png","webpack:///./src/components/seo.js","webpack:///./src/components/divider.js","webpack:///./src/components/container.js","webpack:///./src/theme/index.js","webpack:///./src/components/title.js","webpack:///./src/components/linkbar.js","webpack:///./src/components/header.js","webpack:///./src/components/bioitem.js","webpack:///./src/components/bio.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["fontStyle","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","url","frontmatter","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","description","excerpt","rebass__WEBPACK_IMPORTED_MODULE_3__","flexWrap","flexDirection","fontSize","alignItems","_StyledText","ml","number","date","mt","alignSelf","controls","src","type","mx","dangerouslySetInnerHTML","__html","html","_components_divider__WEBPACK_IMPORTED_MODULE_6__","width","justifyContent","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","rel","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","createContext","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","p","SEO","lang","meta","keywords","_public_static_d_3718716973_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","console","log","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","authors","social","twitter","concat","length","join","defaultProps","styled_components__WEBPACK_IMPORTED_MODULE_1__","rebass__WEBPACK_IMPORTED_MODULE_2__","Divider","my","StyledHr","styled","hr","withConfig","displayName","componentId","maxWidth","minWidth","Container","react_default","_StyledBox","GlobalStyle","createGlobalStyle","_templateObject","mountains","theme","breakpoints","fontSizes","colors","blue","lightgray","flagred","space","fonts","serif","sans","mono","shadows","small","large","textAlign","Title","_747751825","siteDescription","dist","flex","gatsby_browser_entry","Logo","alt","_StyledHeading","color","img","LinkBar","links","text","href","icon","iTunesNoteIcon","googlePlayIcon","stitcherIcon","rssIcon","twitterIcon","pr","map","link","index","array","bg","Header","Background","linkbar","div","textDecoration","BioItem","Avatar","bioImage","bioName","mb","fontWeight","bioDescription","bioTwitter","Bio","_2975466106","bioWidth","author","ind","key","bioitem","avatar","alignImage","Footer","Fragment","bio","FootText","Date","getFullYear","footer","Content","Layout","children","styled_components_browser_esm","container","header"],"mappings":"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","file":"component---src-templates-blog-post-js-756243c6ec2a932058fc.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport { Flex, Box, Heading, Text } from 'rebass';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Divider from '../components/divider';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const { previous, next } = this.props.pageContext;\n\n    const { url } = post.frontmatter;\n\n    return (\n      <Layout>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <Flex flexWrap=\"noflex\" flexDirection=\"column\">\n          <Heading fontSize={[2, 3, 4]}>{siteTitle} Investigates...</Heading>\n          <Flex flexWrap=\"flex\" flexDirection=\"row\" alignItems=\"baseline\">\n            <Heading fontSize={[3, 4, 5]}>{post.frontmatter.title}</Heading>\n            <Text fontSize={[0, 1, 2]} ml={2} css={{ fontStyle: 'italic' }}>\n              Ep. {post.frontmatter.number} - {post.frontmatter.date}\n            </Text>\n          </Flex>\n          <Box mt={3} alignSelf=\"center\">\n            <audio controls>\n              <source src={url} type=\"audio/mp3\" />\n            </audio>\n          </Box>\n          <Box mx={2}>\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n          </Box>\n          <Divider width={1 / 4} />\n          <Flex\n            flexWrap=\"flex\"\n            justifyContent=\"space-between\"\n            flexDirection=\"row\"\n          >\n            <Box>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </Box>\n            <Box>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </Box>\n          </Flex>\n        </Flex>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        number\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        url\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/mountains-4f18cc1481d8cf98668cdf2d38ea2280.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            authors {\n              name\n              description\n              social {\n                twitter\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  console.log(site);\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.authors[0].social.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Flex, Box } from 'rebass';\n\nconst Divider = props => (\n  <Flex flexWrap=\"flex\" justifyContent=\"center\">\n    <Box width={props.width} my={2}>\n      <StyledHr />\n    </Box>\n  </Flex>\n);\n\nexport default Divider;\n\nconst StyledHr = styled.hr`\n  background-color: red;\n`;\n","import React from 'react';\nimport { Box } from 'rebass';\n\nconst Container = props => (\n  <Box\n    {...props}\n    mx=\"auto\"\n    p={2}\n    css={{\n      maxWidth: '1024px',\n      minWidth: '320px',\n    }}\n  />\n);\n\nexport default Container;\n","import { createGlobalStyle } from 'styled-components';\nimport mountains from '../assets/mountains.png';\n\nconst theme = {\n  breakpoints: ['26em', '40em', '54em'],\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64],\n  colors: {\n    blue: '#07c',\n    lightgray: '#f6f6ff',\n    flagred: '#eb2d37'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  fonts: {\n    serif: 'Libre Baskerville, Times New Roman, serif',\n    sans: 'system-ui, sans-serif',\n    mono: 'Menlo, monospace',\n  },\n  shadows: {\n    small: '0 0 4px rgba(0, 0, 0, .125)',\n    large: '0 0 24px rgba(0, 0, 0, .125)',\n  },\n};\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Libre+Baskerville:400,700');\n  html, body {\n    padding: 0;\n    margin: 0;\n    font-family: Helvetica, Arial, sans-serif;\n    background-image: url(${mountains});\n    background-size: cover;\n    background-position: center;\n    background-attachment: fixed;\n    box-sizing: border-box;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  a {\n    text-decoration: none;\n  }\n  ul {\n    margin: 0 auto;\n    padding: 0 auto;\n  }\n  ul p {\n    margin: 0 auto;\n  }\n`;\n\nexport default theme;\nexport { GlobalStyle };\n","import React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport { Flex, Box, Heading } from \"rebass\";\nimport styled from 'styled-components';\n\n// Logo styling trick allows automatic resizing,\n// but if container is larger than image size, the image won't center\n// Responsive widths are chosen to center the logo and keep it responsive\n\nconst Title = () => {\n  const cbpSeal = '/cbp-logo-400.png';\n  const { site } = useStaticQuery(titleQuery);\n  const siteTitle = site.siteMetadata.title;\n  const siteDescription = site.siteMetadata.description;\n  return(\n    <Flex\n      width={1}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      flexDirection=\"column\">\n      <Box\n        width={[.5, null, 300]}\n        flex=\"0 1 auto\"\n      >\n        <Link to='/'>\n          <Logo\n            src={cbpSeal}\n            alt={`${siteTitle} Seal`}\n          />\n        </Link>\n      </Box>\n      <Heading\n        fontSize={[3]}\n        color=\"flagred\"\n        css={{textAlign: 'center'}}>\n        {siteDescription}\n      </Heading>\n    </Flex>\n  )\n}\n\nconst titleQuery = graphql`\n  query TitleQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`;\n\nexport default Title;\n\nconst Logo = styled.img`\n  max-width: 100%;\n  height: auto;\n`\n","import React from 'react';\nimport { Flex, Link, Text, Button } from 'rebass';\nimport styled from 'styled-components';\nimport { Icon } from '@iconify/react';\nimport iTunesNoteIcon from \"@iconify/icons-fa-brands/itunes-note\";\nimport googlePlayIcon from \"@iconify/icons-fa-brands/google-play\";\nimport stitcherIcon from \"@iconify/icons-simple-icons/stitcher\";\nimport rssIcon from \"@iconify/icons-fa-solid/rss\";\nimport twitterIcon from \"@iconify/icons-fa-brands/twitter\";\n\n\nconst LinkBar = props => {\n  const rssFeed =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:8000/rss.xml'\n      : 'https://canadianborderpatrol.com/rss.xml';\n  const links = [\n    {\n      text: \"iTunes\",\n      href: \"https://podcasts.apple.com/ca/podcast/canadian-border-patrol/id1463751515\",\n      icon: iTunesNoteIcon,\n    },\n    {\n      text: \"Google Play\",\n      href: \"https://play.google.com/music/listen?u=0#/ps/Ijfvdnyyavpl4jo4witxkakz5f4\",\n      icon: googlePlayIcon,\n    },\n    {\n      text: \"Stitcher\",\n      href: \"https://www.stitcher.com/podcast/canadian-border-patrol?refid=stpr\",\n      icon: stitcherIcon,\n    },\n    {\n      text: \"RSS\",\n      href: rssFeed,\n      icon: rssIcon,\n    },\n    {\n      text: \"Twitter\",\n      href: \"https://podcasts.apple.com/ca/podcast/canadian-border-patrol/id1463751515\",\n      icon: twitterIcon,\n    }\n  ]\n  return (\n    <Flex\n      flexWrap=\"wrap\"\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      p={2}\n      pr={2}\n    >\n      {links.map((link, index, array) => {\n        return (\n          <Button bg='flagred' m={1}>\n            <Link\n              color='white'\n              href={link.href}>\n              <Icon icon={link.icon} /> {link.text}\n            </Link>\n          </Button>\n        )\n      })}\n    </Flex>\n  );\n}\n\nexport default LinkBar;\n","import React from 'react';\nimport { Flex, Box } from 'rebass';\nimport styled from 'styled-components';\nimport Title from './title';\nimport LinkBar from './linkbar';\n\n\nconst Header = () => {\n  return(\n    <Background>\n      <Flex\n        width={1}\n        flexWrap='noflex'\n        flexDirection='column'\n        alignItems='center'>\n        <Title />\n        <LinkBar />\n      </Flex>\n    </Background>\n  )\n}\n\nexport default Header;\n\nconst Background = styled.div`\n  background-color: #FFFFFFE6;\n  padding: .5rem .5rem;\n  margin-bottom: .5rem;\n  border-radius: 15px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, Box, Text, Link } from 'rebass';\nimport styled from 'styled-components';\nimport { Icon } from '@iconify/react';\nimport twitterIcon from \"@iconify/icons-fa-brands/twitter\";\n\nconst BioItem = props => {\n  return (\n    <Flex\n      flexWrap=\"nowrap\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      fontSize={[1, 2, 3]}\n    >\n      <Box>\n        <Avatar src={props.bioImage} alt={props.bioName} />\n      </Box>\n      <Text\n        mt={1}\n        mb={2}\n        fontWeight=\"bold\"\n        css={{ textDecoration: 'underline' }}\n      >\n        {props.bioName}\n      </Text>\n      <Text mb={1}>{props.bioDescription}</Text>\n      <Link href={`https://twitter.com/${props.bioTwitter}`}>\n        <Icon icon={twitterIcon} />\n      </Link>\n    </Flex>\n  );\n};\n\nBioItem.propTypes = {\n  bioImage: PropTypes.string,\n  bioName: PropTypes.string,\n  bioDescription: PropTypes.string,\n  bioTwitter: PropTypes.string,\n};\n\nexport default BioItem;\n\nconst Avatar = styled.img`\n  width: auto;\n  max-height: 100px;\n  align-self: 'start';\n  border-radius: 100%;\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Flex, Box } from 'rebass';\nimport BioItem from './bioitem';\n\nconst Bio = () => {\n  const { site } = useStaticQuery(bioQuery);\n  const { authors } = site.siteMetadata;\n  const bioWidth = 1 / authors.length;\n  return (\n    <Flex flexWrap=\"nowrap\" flexDirection=\"row\">\n      {authors.map((author, ind) => (\n        <Box\n          flex=\"1 1 auto\"\n          mx={2}\n          width={bioWidth}\n          key={`author-${ind}`}\n        >\n          <BioItem\n            key={`${author.name}-${ind}`}\n            bioImage={`/${author.avatar}`}\n            bioName={author.name}\n            bioDescription={author.description}\n            bioTwitter={author.social.twitter}\n            alignImage={ind % 2 !== 0 ? 'left' : 'right'}\n          />\n        </Box>\n      ))}\n    </Flex>\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        authors {\n          name\n          description\n          avatar\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import React from 'react';\nimport { Box } from 'rebass';\nimport styled from 'styled-components';\n\nimport Bio from './bio';\n\nconst Footer = () => {\n  return(\n    <>\n      <Bio />\n      <Box fontSize={0}>\n        <FootText>© {new Date().getFullYear()} Canadian Border Patrol</FootText>\n      </Box>\n    </>\n  );\n}\n\nexport default Footer;\n\nconst FootText = styled.footer`\n  text-align: center;\n`;\n","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Container from './container';\nimport theme, { GlobalStyle } from '../theme';\nimport Header from './header';\nimport Footer from './footer';\n\nconst Layout = ({ children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <GlobalStyle />\n        <Header />\n        <Content>\n          <main>{children}</main>\n          <Footer />\n        </Content>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default Layout;\n\nconst Content = styled.div`\n  background-color: #FFFFFFE6;\n  padding: 3rem 3rem;\n  border-radius: 15px;\n`;\n"],"sourceRoot":""}