{"version":3,"sources":["webpack:///./src/pages/episodes.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/divider.js","webpack:///./src/components/container.js","webpack:///./src/theme/index.js","webpack:///./src/components/title.js","webpack:///./src/components/linkbar.js","webpack:///./src/components/header.js","webpack:///./src/components/bioitem.js","webpack:///./src/components/bio.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/simplegatsbylink.js","webpack:///./src/components/episodelistitem.js","webpack:///./src/components/episodelist.js"],"names":["AllEpisodesIndex","render","thePosts","this","props","data","allMarkdownRemark","edges","map","post","title","node","frontmatter","slug","fields","date","excerpt","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","_components_episodelist__WEBPACK_IMPORTED_MODULE_5__","posts","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_3718716973_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","authors","social","twitter","concat","length","join","defaultProps","arrayOf","rebass__WEBPACK_IMPORTED_MODULE_1__","Divider","flexWrap","justifyContent","width","my","Container","react_default","_StyledBox","mx","p","_css","maxWidth","minWidth","GlobalStyle","createGlobalStyle","_templateObject","theme","breakpoints","fontSizes","colors","blue","lightgray","space","fonts","serif","sans","mono","shadows","small","large","Title","Logo","styled","img","withConfig","displayName","componentId","gatsby_browser_entry","titleQuery","siteTitle","dist","flexDirection","alignItems","mr","to","src","alt","textAlign","fontSize","fontFamily","_StyledLink","textDecoration","color","_3009533391","LinkBar","pr","px","href","index_esm","Header","flex","linkbar","BioItem","Avatar","bioImage","bioName","_StyledText","mt","mb","fontWeight","bioDescription","bioTwitter","bioQuery","Bio","bioWidth","author","ind","key","bioitem","avatar","alignImage","_2975466106","Footer","FootText","footer","Fragment","bio","Date","getFullYear","Layout","styled_components_browser_esm","container","header","SimpleGatsbyLink","rebass__WEBPACK_IMPORTED_MODULE_2__","EpisodeListItem","simplegatsbylink","ml","fontStyle","pl","shortExcerpt","EpisodeList","divider","episodelistitem"],"mappings":"iNASMA,oGACJC,OAAA,WAAS,IAEDC,EADWC,KAAKC,MAAdC,KACcC,kBAAkBC,MAAMC,IAAI,SAACC,GACjD,MACE,CACEC,MAAOD,EAAKE,KAAKC,YAAYF,MAC7BG,KAAMJ,EAAKE,KAAKG,OAAOD,KACvBE,KAAMN,EAAKE,KAAKC,YAAYG,KAC5BC,QAASP,EAAKE,KAAKK,WAKzB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUlB,KAAKC,MAAMiB,UAC3BJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEZ,MAAM,YACNa,SAAU,yCAEZN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAaC,MAAOvB,SApBGwB,IAAMC,YA0BtB3B,YAER,IAAM4B,EAAS,+CCrCtBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAArB,IAAAW,EAAA,SAYMW,EAAqBd,IAAMe,cAAc,IAEzCT,EAAc,SAAA5B,GAAK,OACvB8B,EAAAhB,EAAAC,cAACqB,EAAmBE,SAApB,KACG,SAAAC,GACC,OACEvC,EAAMC,MACLsC,EAAgBvC,EAAMwC,QAAUD,EAAgBvC,EAAMwC,OAAOvC,MAEtDD,EAAMH,QAAUG,EAAMyC,UAC5BzC,EAAMC,KAAOD,EAAMC,KAAKA,KAAOsC,EAAgBvC,EAAMwC,OAAOvC,MAGvD6B,EAAAhB,EAAAC,cAAA,uCA4Bfa,EAAYc,UAAY,CACtBzC,KAAM0C,IAAUC,OAChBJ,MAAOG,IAAUE,OAAOC,WACxBjD,OAAQ8C,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAC,GAAkB,IAAfrC,EAAeqC,EAAfrC,SACpBsC,EAAgBC,UAAOC,4BAA4BxC,EAASyC,UAClE,OAAKH,EAIEjC,IAAMP,cAAc4C,IAApBC,OAAAC,OAAA,CACL5C,WACAsC,iBACGA,EAAcO,OANV,MAUXT,EAAiBX,UAAY,CAC3BzB,SAAU0B,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,6fCbf,SAASW,EAATV,GAA2D,IAA5CW,EAA4CX,EAA5CW,YAAaC,EAA+BZ,EAA/BY,KAAMC,EAAyBb,EAAzBa,KAAMhD,EAAmBmC,EAAnBnC,SAAUb,EAASgD,EAAThD,MACxC8D,EADiDC,EAAApE,KACjDmE,KAoBFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEpD,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CACE2D,eAAgB,CACdP,QAEF5D,MAAOA,EACPoE,cAAa,QAAUN,EAAKG,aAAajE,MACzC6D,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAStE,GAEX,CACEuE,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKG,aAAaO,QAAQ,GAAGC,OAAOC,SAE/C,CACEL,KAAI,gBACJC,QAAStE,GAEX,CACEqE,KAAI,sBACJC,QAASN,IAGVW,OACC9D,EAAS+D,OAAS,EACd,CACEP,KAAI,WACJC,QAASzD,EAASgE,KAAT,OAEX,IAELF,OAAOd,KAKhBH,EAAIoB,aAAe,CACjBlB,KAAI,KACJC,KAAM,GACNhD,SAAU,GACV8C,YAAW,IAGbD,EAAItB,UAAY,CACduB,YAAatB,IAAUE,OACvBqB,KAAMvB,IAAUE,OAChBsB,KAAMxB,IAAU0C,QAAQ1C,IAAUC,QAClCzB,SAAUwB,IAAU0C,QAAQ1C,IAAUE,QACtCvC,MAAOqC,IAAUE,OAAOC,YAGXkB,yYCxGf,IAAAnC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAyD,EAAA7D,EAAA,KAWe8D,IARC,SAAAvF,GAAK,OACnB8B,EAAAhB,EAAAC,cAACuE,EAAA,KAAD,CAAME,SAAS,OAAOC,eAAe,UACnC3D,EAAAhB,EAAAC,cAACuE,EAAA,IAAD,CAAKI,MAAO1F,EAAM0F,MAAOC,GAAI,GAC3B7D,EAAAhB,EAAAC,cAAA,8FCSS6E,EAZG,SAAA5F,GAAK,OACrB6F,EAAA/E,EAAAC,cAAA+E,EAAAlC,OAAAC,OAAA,GACM7D,EADN,CAEE+F,GAAG,OACHC,EAAG,EAHLC,KAIO,CACHC,SAAU,SACVC,SAAU,+hBCRhB,IAmBMC,EAAcC,4BAAHC,KAmBFC,EAtCD,CACZC,YAAa,CAAC,OAAQ,OAAQ,QAC9BC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxCC,OAAQ,CACNC,KAAM,OACNC,UAAW,WAEbC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CACLC,MAAO,4CACPC,KAAM,wBACNC,KAAM,oBAERC,QAAS,CACPC,MAAO,8BACPC,MAAO,uICVLC,4FACJxH,OAAA,WACE,IAAMyH,EAAOC,UAAOC,IAAVC,WAAA,CAAAC,YAAA,cAAAC,YAAA,gBAAGJ,CAAH,iCAKV,OACE1B,EAAA/E,EAAAC,cAAC6G,EAAA,EAAD,CACEpF,MAAOqF,EACPhI,OAAQ,SAAAI,GACN,IAAM6H,EAAY7H,EAAKmE,KAAKG,aAAajE,MACzC,OACEuF,EAAA/E,EAAAC,cAACgH,EAAA,KAAD,CACEvC,SAAS,SACTwC,cAAc,MACdvC,eAAe,aACfwC,WAAW,UAEXpC,EAAA/E,EAAAC,cAACgH,EAAA,IAAD,CAAKrC,MAAO,CAAC,EAAE,EAAG,IAAOwC,GAAI,GAC3BrC,EAAA/E,EAAAC,cAAC6G,EAAA,EAAD,CAAMO,GAAG,KACPtC,EAAA/E,EAAAC,cAACuG,EAAD,CACEc,IAhBA,mCAiBAC,IAAQP,EAAL,YAITjC,EAAA/E,EAAAC,cAACgH,EAAA,QAAD,CACEO,UAAU,OACVC,SAAU,CAAC,EAAE,EAAE,GACfC,WAAW,SAEX3C,EAAA/E,EAAAC,cAAA0H,EAAA,CACEN,GAAG,IADLlC,KAEO,CACHyC,eAAgB,OAChBC,MAAO,YAGRb,MA/Bb7H,KAAA2I,QARctH,IAAMC,WAkDpBsG,EAAU,aAUDR,sEChCAwB,EA/BC,SAAA7I,GAKd,OACE6F,EAAA/E,EAAAC,cAACgH,EAAA,KAAD,CACEvC,SAAS,SACTwC,cAAc,MACdvC,eAAe,aACfwC,WAAW,SACXjC,EAAG,EACH8C,GAAI,GAEJjD,EAAA/E,EAAAC,cAACgH,EAAA,KAAD,CAAMgB,GAAI,CAAC,EAAG,GAAIR,SAAU,CAAC,EAAG,GAAIS,KAAK,wBACvCnD,EAAA/E,EAAAC,cAACkI,EAAA,EAAD,OAEFpD,EAAA/E,EAAAC,cAACgH,EAAA,KAAD,CAAMgB,GAAI,CAAC,EAAG,GAAIR,SAAU,CAAC,EAAG,GAAIS,KAblC,4CAcAnD,EAAA/E,EAAAC,cAACkI,EAAA,EAAD,OAEFpD,EAAA/E,EAAAC,cAACgH,EAAA,KAAD,CACEgB,GAAI,CAAC,EAAG,GACRR,SAAU,CAAC,EAAG,GACdS,KAAK,uCAELnD,EAAA/E,EAAAC,cAACkI,EAAA,EAAD,SCHOC,4FAlBbrJ,OAAA,WACE,OACEgG,EAAA/E,EAAAC,cAACgH,EAAA,KAAD,CACEvC,SAAS,OACTC,eAAe,gBACfwC,WAAW,UAEXpC,EAAA/E,EAAAC,cAACgH,EAAA,IAAD,CAAKoB,KAAK,YACRtD,EAAA/E,EAAAC,cAACT,EAAD,OAEFuF,EAAA/E,EAAAC,cAACgH,EAAA,IAAD,CAAKoB,KAAK,YACRtD,EAAA/E,EAAAC,cAACqI,EAAD,YAZW9H,IAAMC,6GCD3B,IAAM8H,EAAU,SAAArJ,GACd,OACE6F,EAAA/E,EAAAC,cAACgH,EAAA,KAAD,CACEvC,SAAS,SACTwC,cAAc,SACdC,WAAW,SACXM,SAAU,CAAC,EAAG,EAAG,IAEjB1C,EAAA/E,EAAAC,cAACgH,EAAA,IAAD,KACElC,EAAA/E,EAAAC,cAACuI,EAAD,CAAQlB,IAAKpI,EAAMuJ,SAAUlB,IAAKrI,EAAMwJ,WAE1C3D,EAAA/E,EAAAC,cAAA0I,EAAA,CACEC,GAAI,EACJC,GAAI,EACJC,WAAW,OAHb3D,KAIO,CAAEyC,eAAgB,cAEtB1I,EAAMwJ,SAET3D,EAAA/E,EAAAC,cAACgH,EAAA,KAAD,CAAM4B,GAAI,GAAI3J,EAAM6J,gBACpBhE,EAAA/E,EAAAC,cAACgH,EAAA,KAAD,CAAMiB,KAAI,uBAAyBhJ,EAAM8J,YACvCjE,EAAA/E,EAAAC,cAACkI,EAAA,EAAD,SAMRI,EAAQ3G,UAAY,CAClB6G,SAAU5G,IAAUE,OACpB2G,QAAS7G,IAAUE,OACnBgH,eAAgBlH,IAAUE,OAC1BiH,WAAYnH,IAAUE,QAGTwG,QAETC,EAAS/B,UAAOC,IAAVC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGJ,CAAH,oICJZ,IAAMwC,EAAQ,aAiBCC,EAlDf,WACE,OACEnE,EAAA/E,EAAAC,cAAC6G,EAAA,EAAD,CACEpF,MAAOuH,EACPlK,OAAQ,SAAAI,GAAQ,IACN6E,EAAY7E,EAAKmE,KAAKG,aAAtBO,QACFmF,EAAW,EAAInF,EAAQI,OAC7B,OACEW,EAAA/E,EAAAC,cAACgH,EAAA,KAAD,CAAMvC,SAAS,SAASwC,cAAc,OACnClD,EAAQ1E,IAAI,SAAC8J,EAAQC,GAAT,OACXtE,EAAA/E,EAAAC,cAACgH,EAAA,IAAD,CACEoB,KAAK,WACLpD,GAAI,EACJL,MAAOuE,EACPG,IAAG,UAAYD,GAEftE,EAAA/E,EAAAC,cAACsJ,EAAD,CACED,IAAQF,EAAOvF,KAAZ,IAAoBwF,EACvBZ,SAAQ,IAAMW,EAAOI,OACrBd,QAASU,EAAOvF,KAChBkF,eAAgBK,EAAOjG,YACvB6F,WAAYI,EAAOnF,OAAOC,QAC1BuF,WAAYJ,EAAM,GAAM,EAAI,OAAS,eApBnDlK,KAAAuK,KCeWC,4FAfb5K,OAAA,WACE,IAAM6K,EAAWnD,UAAOoD,OAAVlD,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAGJ,CAAH,wBAGd,OACE1B,EAAA/E,EAAAC,cAAA8E,EAAA/E,EAAA8J,SAAA,KACE/E,EAAA/E,EAAAC,cAAC8J,EAAD,MACAhF,EAAA/E,EAAAC,cAACgH,EAAA,IAAD,CAAKQ,SAAU,GACb1C,EAAA/E,EAAAC,cAAC2J,EAAD,WAAa,IAAII,MAAOC,cAAxB,iCATWzJ,IAAMC,WCYZyJ,IAXA,SAAA1H,GAAA,IAAGb,EAAHa,EAAGb,SAAH,OACboD,EAAA/E,EAAAC,cAACkK,EAAA,cAAD,CAAe1E,MAAOA,GACpBV,EAAA/E,EAAAC,cAACmK,EAAD,KACErF,EAAA/E,EAAAC,cAACqF,EAAD,MACAP,EAAA/E,EAAAC,cAACoK,EAAD,MACAtF,EAAA/E,EAAAC,cAAA,YAAO0B,GACPoD,EAAA/E,EAAAC,cAAC4J,EAAD,0FCSSS,IAlBU,SAAApL,GAAK,OAC5Ba,EAAAC,EAAAC,cAACsK,EAAA,KAAD,CACE/C,UAAWtI,EAAMsI,UACjBC,SAAUvI,EAAMuI,SAChBqB,WAAY5J,EAAM4J,YAElB/I,EAAAC,EAAAC,cAAA0H,EAAA,CACEN,GAAInI,EAAMmI,GADZlC,KAEO,CACHyC,eAAgB,OAChBC,MAAO,YAGR3I,EAAMyC,qUCZb,IAce6I,EAdS,SAAAtL,GAAK,OAC3B6F,EAAA/E,EAAAC,cAACgH,EAAA,KAAD,CAAMvC,SAAS,SAASwC,cAAc,SAASjC,GAAI,GACjDF,EAAA/E,EAAAC,cAACgH,EAAA,KAAD,CAAMvC,SAAS,OAAOwC,cAAc,MAAMC,WAAW,WAAW0B,GAAI,GAClE9D,EAAA/E,EAAAC,cAACwK,EAAA,EAAD,CAAkBhD,SAAU,CAAC,EAAG,EAAG,GAAIqB,WAAW,OAAOzB,GAAInI,EAAMS,MAChET,EAAMM,OAETuF,EAAA/E,EAAAC,cAAA0I,EAAA,CAAMlB,SAAU,CAAC,EAAG,EAAG,GAAIiD,GAAI,EAA/BvF,KAAuC,CAAEwF,UAAW,WACjDzL,EAAMW,OAGXkF,EAAA/E,EAAAC,cAACgH,EAAA,IAAD,CAAK2D,GAAI,CAAC,EAAG,EAAG,IAAK1L,EAAM2L,qFCQhBC,IAjBK,SAAA5L,GAAK,OACvB6F,EAAA/E,EAAAC,cAACgH,EAAA,KAAD,CAAMvC,SAAS,SAASwC,cAAc,SAASvC,eAAe,UAC5DI,EAAA/E,EAAAC,cAAC8K,EAAA,EAAD,CAASnG,MAAO,KACf1F,EAAMqB,MAAMjB,IAAI,SAAAC,GAAI,OACnBwF,EAAA/E,EAAAC,cAAC8E,EAAA/E,EAAM8J,SAAP,CAAgBR,IAAK/J,EAAKI,MACxBoF,EAAA/E,EAAAC,cAAC+K,EAAD,CACExL,MAAOD,EAAKC,MACZG,KAAMJ,EAAKI,KACXE,KAAMN,EAAKM,KACXgL,aAActL,EAAKO,UAErBiF,EAAA/E,EAAAC,cAAC8K,EAAA,EAAD,CAASnG,MAAO","file":"component---src-pages-episodes-js-542780b578d55c21a725.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport { Flex, Text, Box } from 'rebass';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport EpisodeList from '../components/episodelist';\nimport Divider from '../components/divider';\n\nclass AllEpisodesIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const thePosts = data.allMarkdownRemark.edges.map((post) => {\n      return (\n        {\n          title: post.node.frontmatter.title,\n          slug: post.node.fields.slug,\n          date: post.node.frontmatter.date,\n          excerpt: post.node.excerpt\n        }\n      )\n    });\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n          />\n        <EpisodeList posts={thePosts} />\n      </Layout>\n    );\n  }\n}\n\nexport default AllEpisodesIndex;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\n// site {\n//   siteMetadata {\n//     title\n//   }\n// }\n\n// <div\n//   className=\"blog-index\"\n// >\n//   <img src={cbpSeal} alt=\"canadian border patrol seal\" />\n//   <div>\n//     {/* <Bio /> */}\n//     {posts.map(({ node }) => {\n//       const title = node.frontmatter.title || node.fields.slug;\n//       return (\n//         <div key={node.fields.slug}>\n//           <h3\n//             style={{\n//               marginBottom: `0.25rem`,\n//             }}\n//           >\n//             <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n//               {title}\n//             </Link>\n//           </h3>\n//           <small>{node.frontmatter.date}</small>\n//           <p\n//             dangerouslySetInnerHTML={{\n//               __html: node.frontmatter.description || node.excerpt,\n//             }}\n//           />\n//         </div>\n//       );\n//     })}\n//   </div>\n// </div>\n// <hr\n//   style={{\n//     marginBottom: `1rem`,\n//   }}\n// />\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            authors {\n              name\n              description\n              social {\n                twitter\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.authors[0].social.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport { Flex, Box } from 'rebass';\n\nconst Divider = props => (\n  <Flex flexWrap=\"flex\" justifyContent=\"center\">\n    <Box width={props.width} my={2}>\n      <hr />\n    </Box>\n  </Flex>\n);\n\nexport default Divider;\n","import React from 'react';\nimport { Box } from 'rebass';\n\nconst Container = props => (\n  <Box\n    {...props}\n    mx=\"auto\"\n    p={2}\n    css={{\n      maxWidth: '1024px',\n      minWidth: '320px',\n    }}\n  />\n);\n\nexport default Container;\n","import { createGlobalStyle } from 'styled-components';\n\nconst theme = {\n  breakpoints: ['40em', '52em', '64em'],\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64],\n  colors: {\n    blue: '#07c',\n    lightgray: '#f6f6ff',\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  fonts: {\n    serif: 'Libre Baskerville, Times New Roman, serif',\n    sans: 'system-ui, sans-serif',\n    mono: 'Menlo, monospace',\n  },\n  shadows: {\n    small: '0 0 4px rgba(0, 0, 0, .125)',\n    large: '0 0 24px rgba(0, 0, 0, .125)',\n  },\n};\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Libre+Baskerville:400,700');\n  body {\n    padding: 0;\n    margin: 0;\n    font-family: Helvetica, Arial, sans-serif;\n  }\n  a {\n    text-decoration: none;\n  }\n  ul {\n    margin: 0 auto;\n    padding: 0 auto;\n  }\n  ul p {\n    margin: 0 auto;\n  }\n`;\n\nexport default theme;\nexport { GlobalStyle };\n","import React from 'react';\nimport { StaticQuery, graphql, Link } from 'gatsby';\nimport { Flex, Box, Heading } from \"rebass\";\nimport styled from 'styled-components';\n\n// import cbpSeal from '../assets/canadian-border-patrol-logo.png';\n\nclass Title extends React.Component {\n  render() {\n    const Logo = styled.img`\n      max-width: 100%;\n      height: auto;\n    `\n    const cbpSeal = '/canadian-border-patrol-logo.png'\n    return(\n      <StaticQuery\n        query={titleQuery}\n        render={data => {\n          const siteTitle = data.site.siteMetadata.title;\n          return(\n            <Flex\n              flexWrap='nowrap'\n              flexDirection='row'\n              justifyContent='flex-start'\n              alignItems='center'\n            >\n              <Box width={[1/8, 1/10]} mr={2}>\n                <Link to='/'>\n                  <Logo\n                    src={cbpSeal}\n                    alt={`${siteTitle} Seal`}\n                  />\n                </Link>\n              </Box>\n              <Heading\n                textAlign=\"left\"\n                fontSize={[4,5,6]}\n                fontFamily='serif'\n              >\n                <Link\n                  to='/'\n                  css={{\n                    textDecoration: 'none',\n                    color: 'inherit'\n                  }}\n                >\n                  {siteTitle}\n                </Link>\n              </Heading>\n            </Flex>\n          )\n        }}\n      />\n    )\n  }\n}\n\nconst titleQuery = graphql`\n  query TitleQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n\nexport default Title;\n","import React from 'react';\nimport { Flex, Link } from 'rebass';\nimport { FaPodcast, FaRss, FaTwitter } from 'react-icons/fa';\n\nconst LinkBar = props => {\n  const rssFeed =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:8000/rss.xml'\n      : 'https://canadianborderpatrol.com/rss.xml';\n  return (\n    <Flex\n      flexWrap=\"nowrap\"\n      flexDirection=\"row\"\n      justifyContent=\"flex-start\"\n      alignItems=\"center\"\n      p={1}\n      pr={2}\n    >\n      <Link px={[1, 2]} fontSize={[2, 3]} href=\"http://www.apple.com\">\n        <FaPodcast />\n      </Link>\n      <Link px={[1, 2]} fontSize={[2, 3]} href={rssFeed}>\n        <FaRss />\n      </Link>\n      <Link\n        px={[1, 2]}\n        fontSize={[2, 3]}\n        href=\"https://twitter.com/canborderpatrol\"\n      >\n        <FaTwitter />\n      </Link>\n    </Flex>\n  );\n};\n\nexport default LinkBar;\n","import React from 'react';\nimport { Flex, Box } from 'rebass';\n\nimport Title from './title';\nimport LinkBar from './linkbar';\n\n\nclass Header extends React.Component {\n  render() {\n    return(\n      <Flex\n        flexWrap='wrap'\n        justifyContent='space-between'\n        alignItems='center'\n      >\n        <Box flex='1 0 auto'>\n          <Title/>\n        </Box>\n        <Box flex='1 0 auto'>\n          <LinkBar />\n        </Box>\n      </Flex>\n    )\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, Box, Text, Link } from 'rebass';\nimport styled from 'styled-components';\nimport { FaTwitter } from 'react-icons/fa';\n\nconst BioItem = props => {\n  return (\n    <Flex\n      flexWrap=\"nowrap\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      fontSize={[1, 2, 3]}\n    >\n      <Box>\n        <Avatar src={props.bioImage} alt={props.bioName} />\n      </Box>\n      <Text\n        mt={1}\n        mb={2}\n        fontWeight=\"bold\"\n        css={{ textDecoration: 'underline' }}\n      >\n        {props.bioName}\n      </Text>\n      <Text mb={1}>{props.bioDescription}</Text>\n      <Link href={`https://twitter.com/${props.bioTwitter}`}>\n        <FaTwitter />\n      </Link>\n    </Flex>\n  );\n};\n\nBioItem.propTypes = {\n  bioImage: PropTypes.string,\n  bioName: PropTypes.string,\n  bioDescription: PropTypes.string,\n  bioTwitter: PropTypes.string,\n};\n\nexport default BioItem;\n\nconst Avatar = styled.img`\n  width: auto;\n  max-height: 100px;\n  align-self: 'start';\n  border-radius: 100%;\n`;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { Flex, Box } from 'rebass';\nimport BioItem from './bioitem';\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { authors } = data.site.siteMetadata;\n        const bioWidth = 1 / authors.length;\n        return (\n          <Flex flexWrap=\"nowrap\" flexDirection=\"row\">\n            {authors.map((author, ind) => (\n              <Box\n                flex=\"1 1 auto\"\n                mx={2}\n                width={bioWidth}\n                key={`author-${ind}`}\n              >\n                <BioItem\n                  key={`${author.name}-${ind}`}\n                  bioImage={`/${author.avatar}`}\n                  bioName={author.name}\n                  bioDescription={author.description}\n                  bioTwitter={author.social.twitter}\n                  alignImage={ind % 2 !== 0 ? 'left' : 'right'}\n                />\n              </Box>\n            ))}\n          </Flex>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        authors {\n          name\n          description\n          avatar\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import React from 'react';\nimport { Box } from 'rebass';\nimport styled from 'styled-components';\n\nimport Bio from './bio';\n\nclass Footer extends React.Component {\n  render() {\n    const FootText = styled.footer`\n      text-align: center;\n    `;\n    return(\n      <>\n        <Bio />\n        <Box fontSize={0}>\n          <FootText>© {new Date().getFullYear()} Canadian Border Patrol</FootText>\n        </Box>\n      </>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport Container from './container';\nimport theme, { GlobalStyle } from '../theme';\nimport Header from './header';\nimport Footer from './footer';\n\nconst Layout = ({ children }) => (\n  <ThemeProvider theme={theme}>\n    <Container>\n      <GlobalStyle />\n      <Header />\n      <main>{children}</main>\n      <Footer />\n    </Container>\n  </ThemeProvider>\n);\n\nexport default Layout;\n","import React from 'react';\nimport { Text } from 'rebass';\nimport { Link } from 'gatsby';\n\nconst SimpleGatsbyLink = props => (\n  <Text\n    textAlign={props.textAlign}\n    fontSize={props.fontSize}\n    fontWeight={props.fontWeight}\n  >\n    <Link\n      to={props.to}\n      css={{\n        textDecoration: 'none',\n        color: 'inherit'\n      }}\n    >\n      {props.children}\n    </Link>\n  </Text>\n);\n\nexport default SimpleGatsbyLink;\n","import React from 'react';\nimport { Flex, Box, Text } from 'rebass';\n\nimport SimpleGatsbyLink from './simplegatsbylink';\n\nconst EpisodeListItem = props => (\n  <Flex flexWrap=\"nowrap\" flexDirection=\"column\" mx={2}>\n    <Flex flexWrap=\"wrap\" flexDirection=\"row\" alignItems=\"baseline\" mb={2}>\n      <SimpleGatsbyLink fontSize={[3, 4, 5]} fontWeight=\"bold\" to={props.slug}>\n        {props.title}\n      </SimpleGatsbyLink>\n      <Text fontSize={[0, 1, 2]} ml={2} css={{ fontStyle: 'italic' }}>\n        {props.date}\n      </Text>\n    </Flex>\n    <Box pl={[2, 3, 4]}>{props.shortExcerpt}</Box>\n  </Flex>\n);\n\nexport default EpisodeListItem;\n","import React from 'react';\nimport { Flex } from 'rebass';\n\nimport EpisodeListItem from './episodelistitem';\nimport Divider from './divider';\n\nconst EpisodeList = props => (\n  <Flex flexWrap=\"nowrap\" flexDirection=\"column\" justifyContent=\"center\">\n    <Divider width={1 / 2} />\n    {props.posts.map(post => (\n      <React.Fragment key={post.slug}>\n        <EpisodeListItem\n          title={post.title}\n          slug={post.slug}\n          date={post.date}\n          shortExcerpt={post.excerpt}\n        />\n        <Divider width={1 / 2} />\n      </React.Fragment>\n    ))}\n  </Flex>\n);\n\nexport default EpisodeList;\n"],"sourceRoot":""}