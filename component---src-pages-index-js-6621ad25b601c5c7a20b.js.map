{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js","webpack:///./src/components/layout.js","webpack:///./src/assets/canadian-border-patrol-logo.png"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","style","display","gridTemplateColumns","src","cbpSeal","alt","map","_ref","node","frontmatter","fields","slug","key","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","_public_static_d_737910624_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","bioQuery","Bio","react_default","gatsby_browser_entry","authors","console","log","jordan","gridGap","ind","avatar","marginRight","maxWidth","height","alignSelf","borderRadius","order","href","social","twitter","_692709828","Layout","marginLeft","padding","bio","Date","getFullYear","p"],"mappings":"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","file":"component---src-pages-index-js-6621ad25b601c5c7a20b.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { rhythm } from '../utils/typography';\nimport cbpSeal from '../assets/canadian-border-patrol-logo.png';\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n\n        <div\n          style={{\n            display: 'grid',\n            gridTemplateColumns: '1fr 2fr',\n          }}\n        >\n          <img src={cbpSeal} alt=\"canadian border patrol seal\" />\n          <div>\n            {/* <Bio /> */}\n            {posts.map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug;\n              return (\n                <div key={node.fields.slug}>\n                  <h3\n                    style={{\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                      {title}\n                    </Link>\n                  </h3>\n                  <small>{node.frontmatter.date}</small>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.description || node.excerpt,\n                    }}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            authors {\n              name\n              description\n              siteUrl\n              social {\n                twitter\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../utils/typography';\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { authors } = data.site.siteMetadata;\n\n        console.log(data.jordan);\n        return (\n          <div\n            style={{\n              display: 'grid',\n              gridTemplateColumns: '1fr 1fr',\n              gridGap: '1rem',\n            }}\n          >\n            {authors.map((author, ind) => (\n              <div\n                key={`${author.name}-${ind}`}\n                style={{\n                  display: `flex`,\n                  marginBottom: rhythm(2.5),\n                }}\n              >\n                <img\n                  src={`/${author.avatar}`}\n                  alt={author.name}\n                  style={{\n                    marginRight: rhythm(1 / 2),\n                    marginBottom: 0,\n                    maxWidth: '100px',\n                    height: 'auto',\n                    alignSelf: 'start',\n                    borderRadius: '100%',\n                    order: ind % 2 !== 0 ? 1 : 0,\n                  }}\n                />\n                <p>\n                  {author.description}\n                  {` `}\n                  <a href={`https://twitter.com/${author.social.twitter}`}>\n                    You should follow him on Twitter\n                  </a>\n                </p>\n              </div>\n            ))}\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        authors {\n          name\n          description\n          avatar\n          siteUrl\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport { rhythm, scale } from '../utils/typography';\nimport Bio from './bio';\n\nclass Layout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <main>{children}</main>\n        <Bio />\n        <footer>© {new Date().getFullYear()} Canadian Border Patrol</footer>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","module.exports = __webpack_public_path__ + \"static/canadian-border-patrol-logo-dbd916a61c1d95fcc19e58f40b222948.png\";"],"sourceRoot":""}