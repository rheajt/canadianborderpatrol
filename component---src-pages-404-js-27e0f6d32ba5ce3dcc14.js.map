{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js","webpack:///./src/components/layout.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","_public_static_d_737910624_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","bioQuery","Bio","react_default","gatsby_browser_entry","authors","console","log","jordan","style","display","gridTemplateColumns","gridGap","map","ind","key","marginBottom","src","avatar","alt","marginRight","maxWidth","height","alignSelf","borderRadius","order","href","social","twitter","_692709828","Layout","marginLeft","padding","bio","Date","getFullYear"],"mappings":"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","file":"component---src-pages-404-js-27e0f6d32ba5ce3dcc14.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            authors {\n              name\n              description\n              siteUrl\n              social {\n                twitter\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../utils/typography';\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { authors } = data.site.siteMetadata;\n\n        console.log(data.jordan);\n        return (\n          <div\n            style={{\n              display: 'grid',\n              gridTemplateColumns: '1fr 1fr',\n              gridGap: '1rem',\n            }}\n          >\n            {authors.map((author, ind) => (\n              <div\n                key={`${author.name}-${ind}`}\n                style={{\n                  display: `flex`,\n                  marginBottom: rhythm(2.5),\n                }}\n              >\n                <img\n                  src={`/${author.avatar}`}\n                  alt={author.name}\n                  style={{\n                    marginRight: rhythm(1 / 2),\n                    marginBottom: 0,\n                    maxWidth: '100px',\n                    height: 'auto',\n                    alignSelf: 'start',\n                    borderRadius: '100%',\n                    order: ind % 2 !== 0 ? 1 : 0,\n                  }}\n                />\n                <p>\n                  {author.description}\n                  {` `}\n                  <a href={`https://twitter.com/${author.social.twitter}`}>\n                    You should follow him on Twitter\n                  </a>\n                </p>\n              </div>\n            ))}\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        authors {\n          name\n          description\n          avatar\n          siteUrl\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport { rhythm, scale } from '../utils/typography';\nimport Bio from './bio';\n\nclass Layout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <main>{children}</main>\n        <Bio />\n        <footer>© {new Date().getFullYear()} Canadian Border Patrol</footer>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n"],"sourceRoot":""}