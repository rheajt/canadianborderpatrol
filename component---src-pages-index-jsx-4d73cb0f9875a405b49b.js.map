{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/assets/imgs/canadian-border-patrol-logo.png","webpack:///./src/components/Header.jsx","webpack:///./src/layout/index.jsx","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./src/components/PostListing.jsx","webpack:///./src/components/SEO.jsx"],"names":["Index","render","postEdges","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_6___default","siteTitle","_components_SEO__WEBPACK_IMPORTED_MODULE_5__","_components_PostListing__WEBPACK_IMPORTED_MODULE_4__","Component","__webpack_exports__","pageQuery","module","exports","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","googleAnalyticsID","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","themeColor","backgroundColor","__webpack_require__","p","HeaderStyled","styled_components_browser_esm","header","withConfig","displayName","componentId","components_Header","react_default","src","canadian_border_patrol_logo_default","alt","theme","primary","secondary","black","GlobalStyle","Object","_templateObject","layout_MainLayout","children","Fragment","Helmet_default","name","content","SiteConfig_default","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","strArray","resultArray","match","length","first","shift","replace","i","component","TypeError","push","str","join","parts","split","normalize","arguments","slice","call","undefined","PostListing","getPostList","postList","forEach","postEdge","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","react__WEBPACK_IMPORTED_MODULE_4___default","map","post","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","key","SEO","description","image","postURL","_this$props","postNode","postPath","postSEO","postMeta","url_join__WEBPACK_IMPORTED_MODULE_3___default","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_4___default","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","item","@id","headline","type","JSON","stringify","property","siteFBAppID","userTwitter","react__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-index-jsx-4d73cb0f9875a405b49b.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport PostListing from '../components/PostListing';\nimport SEO from '../components/SEO';\nimport config from '../../data/SiteConfig';\n\nclass Index extends React.Component {\n  render() {\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <div className=\"index-container\">\n          <Helmet title={config.siteTitle} />\n          <SEO />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [fields___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = {\n  siteTitle: 'Canadian Border Patrol', // Site title.\n  siteTitleShort: 'CBP', // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: 'The realest, fake agency in North America', // Alternative site title for SEO.\n  siteLogo: '/logos/logo-1024.png', // Logo used for SEO and manifest.\n  siteUrl: 'https://canadianborderpatrol.com', // Domain of your website without pathPrefix.\n  pathPrefix: '/canadianborderpatrol',\n  siteDescription:\n    'Investigating the important differences between the great border between two great countries', // Website description used for RSS feeds/meta description tag.\n  siteRss: '/rss.xml', // Path to the RSS file.\n  googleAnalyticsID: '', // GA tracking ID.\n  // disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // Disqus shortname.\n  postDefaultCategoryID: 'Discussion', // Default category for posts.\n  dateFromFormat: 'YYYY-MM-DD', // Date format used in the frontmatter.\n  dateFormat: 'DD/MM/YYYY', // Date format for display.\n  userName: 'Border Patrol Agent', // Username to display in the author segment.\n  // userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: 'North America', // User location to display in the author segment.\n  userAvatar: 'https://api.adorable.io/avatars/150/test.png', // User avatar to display in the author segment.\n  userDescription: 'Sharing is caring.', // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: 'GitHub',\n      url: 'https://github.com/rheajt',\n      iconClassName: 'fa fa-github'\n    },\n    {\n      label: 'Twitter',\n      url: 'https://twitter.com/rheajt',\n      iconClassName: 'fa fa-twitter'\n    }\n  ],\n  copyright: 'Copyright © 2019. Canadian Border Patrol', // Copyright string for the footer of the website and RSS feed.\n  themeColor: '#f00', // Used for setting manifest and progress theme colors.\n  backgroundColor: '#e0e0e0' // Used for setting manifest background color.\n};\n","module.exports = __webpack_public_path__ + \"static/canadian-border-patrol-logo-dbd916a61c1d95fcc19e58f40b222948.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport cbplogo from '../assets/imgs/canadian-border-patrol-logo.png';\n\nconst HeaderStyled = styled.header`\n  display: grid;\n  grid-template-columns: 1fr 3fr;\n  grid-template-rows: auto auto;\n  grid-template-areas:\n    'logo title'\n    'logo subtitle';\n  justify-items: center;\n  align-items: center;\n  width: 700px;\n  margin: 0 auto;\n  img {\n    grid-area: logo;\n    width: 300px;\n  }\n\n  h1 {\n    grid-area: title;\n  }\n\n  h4 {\n    grid-area: subtitle;\n  }\n`;\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <HeaderStyled>\n        <img src={cbplogo} alt=\"canadian border patrol logo\" />\n        <h1>Canadian Border Patrol</h1>\n        <h4>The Realest, Fake Border Agency in the World</h4>\n      </HeaderStyled>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport Header from '../components/Header';\nimport config from '../../data/SiteConfig';\n\nconst theme = {\n  primary: '',\n  secondary: '',\n  black: '#1f1f1f'\n};\n\nconst GlobalStyle = createGlobalStyle`\n* {\n    box-sizing: border-box;\n}\n\nhtml {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    padding: 20px;\n}\n`;\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          <Helmet>\n            <meta name=\"description\" content={config.siteDescription} />\n          </Helmet>\n          <GlobalStyle />\n          <Header />\n          {children}\n        </React.Fragment>\n      </ThemeProvider>\n    );\n  }\n}\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div>\n        {/* Your post list here. */\n        postList.map(post => (\n          <Link to={post.path} key={post.title}>\n            <h1>{post.title}</h1>\n          </Link>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n","import React, { Component } from 'react';\nimport Helmet from 'react-helmet';\nimport urljoin from 'url-join';\nimport config from '../../data/SiteConfig';\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : ''\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BreadcrumbList',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              position: 1,\n              item: {\n                '@id': postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BlogPosting',\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n          headline: title,\n          image: {\n            '@type': 'ImageObject',\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : ''}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : ''}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}