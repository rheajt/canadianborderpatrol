{"version":3,"sources":["webpack:///./src/components/UserInfo.jsx","webpack:///./src/components/Disqus.jsx","webpack:///./src/components/PostTags.jsx","webpack:///./src/components/SocialLinks.jsx","webpack:///./src/templates/post.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/assets/imgs/canadian-border-patrol-logo.png","webpack:///./src/components/Header.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/SEO.jsx"],"names":["components_UserInfo","render","userTwitter","this","props","config","expanded","react_default","a","createElement","dist","username","options","count","react","components_Disqus","Disqus","_this","_Component","call","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","postNode","SiteConfig_default","disqusShortname","post","frontmatter","url","url_join_default","siteUrl","pathPrefix","fields","slug","main_default","shortname","identifier","title","category_id","onNewComment","components_PostTags","tags","className","map","tag","gatsby_browser_entry","key","style","textDecoration","to","kebabCase_default","StyledSocialLinks","styled_components_browser_esm","div","withConfig","displayName","componentId","components_SocialLinks","_this$props","postPath","mobile","iconSize","renderShareCount","filter","RedditShareButton","RedditIcon","round","size","RedditShareCount","TwitterShareButton","TwitterIcon","GooglePlusShareButton","GooglePlusIcon","GooglePlusShareCount","FacebookShareButton","quote","excerpt","FacebookIcon","FacebookShareCount","LinkedinShareButton","description","LinkedinIcon","LinkedinShareCount","TelegramShareButton","TelegramIcon","PostMeta","post_PostTemplate","pageContext","data","markdownRemark","id","postDefaultCategoryID","layout","Helmet_default","siteTitle","SEO","postSEO","dangerouslySetInnerHTML","__html","html","Component","pageQuery","module","exports","siteTitleShort","siteTitleAlt","siteLogo","siteDescription","siteRss","googleAnalyticsID","dateFromFormat","dateFormat","userName","userLocation","userAvatar","userDescription","userLinks","label","iconClassName","copyright","themeColor","backgroundColor","__webpack_require__","p","HeaderStyled","header","components_Header","src","canadian_border_patrol_logo_default","alt","theme","primary","secondary","black","GlobalStyle","Object","_templateObject","layout_MainLayout","children","Fragment","name","content","image","postURL","postMeta","cover","url_join__WEBPACK_IMPORTED_MODULE_3___default","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_4___default","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","type","JSON","stringify","property","siteFBAppID","react__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__"],"mappings":"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","file":"component---src-templates-post-jsx-40b586f2458119a16031.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Follow } from \"react-twitter-widgets\";\n\nclass UserInfo extends Component {\n  render() {\n    const { userTwitter } = this.props.config;\n    const { expanded } = this.props;\n    return (\n      <Follow\n        username={userTwitter}\n        options={{ count: expanded ? true : \"none\" }}\n      />\n    );\n  }\n}\n\nexport default UserInfo;\n","import React, { Component } from 'react';\nimport ReactDisqusComments from 'react-disqus-comments';\nimport urljoin from 'url-join';\nimport config from '../../data/SiteConfig';\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toasts: []\n    };\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\n  }\n\n  onSnackbarDismiss() {\n    const [, ...toasts] = this.state.toasts;\n    this.setState({ toasts });\n  }\n\n  notifyAboutComment() {\n    const toasts = this.state.toasts.slice();\n    toasts.push({ text: 'New comment available!' });\n    this.setState({ toasts });\n  }\n\n  render() {\n    const { postNode } = this.props;\n    if (!config.disqusShortname) {\n      return null;\n    }\n    const post = postNode.frontmatter;\n    const url = urljoin(\n      config.siteUrl,\n      config.pathPrefix,\n      postNode.fields.slug\n    );\n    return (\n      <ReactDisqusComments\n        shortname={config.disqusShortname}\n        identifier={post.title}\n        title={post.title}\n        url={url}\n        category_id={post.category_id}\n        onNewComment={this.notifyAboutComment}\n      />\n    );\n  }\n}\n\nexport default Disqus;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <button>{tag}</button>\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from 'react';\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  RedditShareButton,\n  FacebookShareCount,\n  GooglePlusShareCount,\n  LinkedinShareCount,\n  RedditShareCount,\n  FacebookIcon,\n  TwitterIcon,\n  TelegramIcon,\n  GooglePlusIcon,\n  LinkedinIcon,\n  RedditIcon\n} from 'react-share';\nimport urljoin from 'url-join';\nimport styled from 'styled-components';\nimport config from '../../data/SiteConfig';\n\nconst StyledSocialLinks = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  margin: 15px 0;\n\n  div {\n    margin: 5px 15px;\n  }\n`;\n\nconst ShareCount = styled.div`\n  text-align: center;\n`;\n\nclass SocialLinks extends Component {\n  render() {\n    const { postNode, postPath, mobile } = this.props;\n    const post = postNode.frontmatter;\n    const url = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    const iconSize = mobile ? 36 : 48;\n    const filter = count => (count > 0 ? count : '');\n    const renderShareCount = count => (\n      <div className=\"share-count\">{filter(count)}</div>\n    );\n\n    return (\n      <StyledSocialLinks>\n        <RedditShareButton url={url} title={post.title}>\n          <RedditIcon round size={iconSize} />\n          <RedditShareCount url={url}>\n            {count => renderShareCount(count)}\n          </RedditShareCount>\n        </RedditShareButton>\n        <TwitterShareButton url={url} title={post.title}>\n          <TwitterIcon round size={iconSize} />\n        </TwitterShareButton>\n        <GooglePlusShareButton url={url}>\n          <GooglePlusIcon round size={iconSize} />\n          <GooglePlusShareCount url={url}>\n            {count => renderShareCount(count)}\n          </GooglePlusShareCount>\n        </GooglePlusShareButton>\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\n          <FacebookIcon round size={iconSize} />\n          <FacebookShareCount url={url}>\n            {count => renderShareCount(count)}\n          </FacebookShareCount>\n        </FacebookShareButton>\n        <LinkedinShareButton\n          url={url}\n          title={post.title}\n          description={postNode.excerpt}\n        >\n          <LinkedinIcon round size={iconSize} />\n          <LinkedinShareCount url={url}>\n            {count => renderShareCount(count)}\n          </LinkedinShareCount>\n        </LinkedinShareButton>\n        <TelegramShareButton url={url}>\n          <TelegramIcon round size={iconSize} />\n        </TelegramShareButton>\n      </StyledSocialLinks>\n    );\n  }\n}\n\nexport default SocialLinks;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport UserInfo from '../components/UserInfo';\nimport Disqus from '../components/Disqus';\nimport PostTags from '../components/PostTags';\nimport SocialLinks from '../components/SocialLinks';\nimport SEO from '../components/SEO';\nimport config from '../../data/SiteConfig';\nimport './b16-tomorrow-dark.css';\nimport styled from 'styled-components';\n\nconst PostMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport default class PostTemplate extends React.Component {\n  render() {\n    const { slug } = this.props.pageContext;\n    const postNode = this.props.data.markdownRemark;\n    const post = postNode.frontmatter;\n    if (!post.id) {\n      post.id = slug;\n    }\n    if (!post.category_id) {\n      post.category_id = config.postDefaultCategoryID;\n    }\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n          <div>\n            <h1>{post.title}</h1>\n            <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n            <PostMeta>\n              <PostTags tags={post.tags} />\n              <SocialLinks postPath={slug} postNode={postNode} />\n            </PostMeta>\n            <UserInfo config={config} />\n            <Disqus postNode={postNode} />\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover\n        date\n        category\n        tags\n      }\n      fields {\n        nextTitle\n        nextSlug\n        prevTitle\n        prevSlug\n        slug\n        date\n      }\n    }\n  }\n`;\n","module.exports = {\n  siteTitle: 'Canadian Border Patrol', // Site title.\n  siteTitleShort: 'CBP', // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: 'The realest, fake agency in North America', // Alternative site title for SEO.\n  siteLogo: '/logos/logo-1024.png', // Logo used for SEO and manifest.\n  siteUrl: 'https://canadianborderpatrol.com', // Domain of your website without pathPrefix.\n  pathPrefix: '/canadianborderpatrol',\n  siteDescription:\n    'Investigating the important differences between the great border between two great countries', // Website description used for RSS feeds/meta description tag.\n  siteRss: '/rss.xml', // Path to the RSS file.\n  googleAnalyticsID: '', // GA tracking ID.\n  // disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // Disqus shortname.\n  postDefaultCategoryID: 'Discussion', // Default category for posts.\n  dateFromFormat: 'YYYY-MM-DD', // Date format used in the frontmatter.\n  dateFormat: 'DD/MM/YYYY', // Date format for display.\n  userName: 'Border Patrol Agent', // Username to display in the author segment.\n  // userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: 'North America', // User location to display in the author segment.\n  userAvatar: 'https://api.adorable.io/avatars/150/test.png', // User avatar to display in the author segment.\n  userDescription: 'Sharing is caring.', // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: 'GitHub',\n      url: 'https://github.com/rheajt',\n      iconClassName: 'fa fa-github'\n    },\n    {\n      label: 'Twitter',\n      url: 'https://twitter.com/rheajt',\n      iconClassName: 'fa fa-twitter'\n    }\n  ],\n  copyright: 'Copyright © 2019. Canadian Border Patrol', // Copyright string for the footer of the website and RSS feed.\n  themeColor: '#f00', // Used for setting manifest and progress theme colors.\n  backgroundColor: '#e0e0e0' // Used for setting manifest background color.\n};\n","module.exports = __webpack_public_path__ + \"static/canadian-border-patrol-logo-dbd916a61c1d95fcc19e58f40b222948.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport cbplogo from '../assets/imgs/canadian-border-patrol-logo.png';\n\nconst HeaderStyled = styled.header`\n  display: grid;\n  grid-template-columns: 1fr 3fr;\n  grid-template-rows: auto auto;\n  grid-template-areas:\n    'logo title'\n    'logo subtitle';\n  justify-items: center;\n  align-items: center;\n  width: 700px;\n  margin: 0 auto;\n  img {\n    grid-area: logo;\n    width: 300px;\n  }\n\n  h1 {\n    grid-area: title;\n  }\n\n  h4 {\n    grid-area: subtitle;\n  }\n`;\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <HeaderStyled>\n        <img src={cbplogo} alt=\"canadian border patrol logo\" />\n        <h1>Canadian Border Patrol</h1>\n        <h4>The Realest, Fake Border Agency in the World</h4>\n      </HeaderStyled>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport Header from '../components/Header';\nimport config from '../../data/SiteConfig';\n\nconst theme = {\n  primary: '',\n  secondary: '',\n  black: '#1f1f1f'\n};\n\nconst GlobalStyle = createGlobalStyle`\n* {\n    box-sizing: border-box;\n}\n\nhtml {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    padding: 20px;\n}\n`;\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          <Helmet>\n            <meta name=\"description\" content={config.siteDescription} />\n          </Helmet>\n          <GlobalStyle />\n          <Header />\n          {children}\n        </React.Fragment>\n      </ThemeProvider>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Helmet from 'react-helmet';\nimport urljoin from 'url-join';\nimport config from '../../data/SiteConfig';\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : ''\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BreadcrumbList',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              position: 1,\n              item: {\n                '@id': postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BlogPosting',\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n          headline: title,\n          image: {\n            '@type': 'ImageObject',\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : ''}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : ''}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}