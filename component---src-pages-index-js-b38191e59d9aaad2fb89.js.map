{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/divider.js","webpack:///./src/components/container.js","webpack:///./src/theme/index.js","webpack:///./src/components/title.js","webpack:///./src/components/linkbar.js","webpack:///./src/components/header.js","webpack:///./src/components/bioitem.js","webpack:///./src/components/bio.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/simplegatsbylink.js","webpack:///./src/components/episodelistitem.js","webpack:///./src/components/episodelist.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_icons_io__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","_components_episodelist__WEBPACK_IMPORTED_MODULE_5__","_components_divider__WEBPACK_IMPORTED_MODULE_6__","_components_simplegatsbylink__WEBPACK_IMPORTED_MODULE_7__","SiteIndex","props","thePosts","data","allMarkdownRemark","edges","map","post","title","node","frontmatter","slug","fields","date","excerpt","a","createElement","keywords","posts","textAlign","fontSize","fontWeight","to","width","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_3718716973_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","authors","social","twitter","concat","length","join","defaultProps","arrayOf","rebass__WEBPACK_IMPORTED_MODULE_1__","Divider","flexWrap","justifyContent","my","Container","react_default","_StyledBox","mx","p","_css","maxWidth","minWidth","GlobalStyle","createGlobalStyle","_templateObject","theme","breakpoints","fontSizes","colors","blue","lightgray","space","fonts","sans","mono","shadows","small","large","Title","Logo","styled","img","withConfig","displayName","componentId","gatsby_browser_entry","titleQuery","siteTitle","dist","flexDirection","alignItems","mr","src","alt","_StyledLink","textDecoration","color","_3009533391","Component","LinkBar","pr","px","href","index_esm","Header","flex","linkbar","BioItem","Avatar","bioImage","bioName","_StyledText","mt","mb","bioDescription","bioTwitter","bioQuery","Bio","bioWidth","author","ind","key","bioitem","avatar","alignImage","_2975466106","Footer","FootText","footer","Fragment","bio","Date","getFullYear","Layout","styled_components_browser_esm","container","header","SimpleGatsbyLink","rebass__WEBPACK_IMPORTED_MODULE_2__","EpisodeListItem","simplegatsbylink","ml","fontStyle","pl","shortExcerpt","EpisodeList","divider","episodelistitem"],"mappings":"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","file":"component---src-pages-index-js-b38191e59d9aaad2fb89.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport { IoMdArrowForward } from 'react-icons/io';\nimport { Flex, Text, Box } from 'rebass';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport EpisodeList from '../components/episodelist';\nimport Divider from '../components/divider';\nimport SimpleGatsbyLink from '../components/simplegatsbylink';\n\nconst SiteIndex = props => {\n  const { data } = props;\n  const thePosts = data.allMarkdownRemark.edges.map(post => {\n    return {\n      title: post.node.frontmatter.title,\n      slug: post.node.fields.slug,\n      date: post.node.frontmatter.date,\n      excerpt: post.node.excerpt,\n    };\n  });\n\n  return (\n    <Layout>\n      <SEO\n        title=\"All posts\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n      <EpisodeList posts={thePosts} />\n      <SimpleGatsbyLink\n        textAlign=\"center\"\n        fontSize={[2, 3, 4]}\n        fontWeight=\"bold\"\n        to=\"/episodes/\"\n      >\n        All Episodes <IoMdArrowForward />\n      </SimpleGatsbyLink>\n      <Divider width={1 / 2} />\n    </Layout>\n  );\n};\n\nexport default SiteIndex;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 5\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\n// site {\n//   siteMetadata {\n//     title\n//   }\n// }\n\n// <div\n//   className=\"blog-index\"\n// >\n//   <img src={cbpSeal} alt=\"canadian border patrol seal\" />\n//   <div>\n//     {/* <Bio /> */}\n//     {posts.map(({ node }) => {\n//       const title = node.frontmatter.title || node.fields.slug;\n//       return (\n//         <div key={node.fields.slug}>\n//           <h3\n//             style={{\n//               marginBottom: `0.25rem`,\n//             }}\n//           >\n//             <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n//               {title}\n//             </Link>\n//           </h3>\n//           <small>{node.frontmatter.date}</small>\n//           <p\n//             dangerouslySetInnerHTML={{\n//               __html: node.frontmatter.description || node.excerpt,\n//             }}\n//           />\n//         </div>\n//       );\n//     })}\n//   </div>\n// </div>\n// <hr\n//   style={{\n//     marginBottom: `1rem`,\n//   }}\n// />\n\n// <Text\n//   textAlign='center'\n//   fontSize={[2, 3, 4]}\n//   fontWeight='bold'\n// >\n//   <Link\n//     to=\"/episodes/\"\n//     css={{\n//       textDecoration: 'none',\n//       color: 'inherit'\n//     }}\n//   >\n//     All Episodes <IoMdArrowForward />\n//   </Link>\n// </Text>\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            authors {\n              name\n              description\n              social {\n                twitter\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.authors[0].social.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport { Flex, Box } from 'rebass';\n\nconst Divider = props => (\n  <Flex flexWrap=\"flex\" justifyContent=\"center\">\n    <Box width={props.width} my={2}>\n      <hr />\n    </Box>\n  </Flex>\n);\n\nexport default Divider;\n","import React from 'react';\nimport { Box } from 'rebass';\n\nconst Container = props => (\n  <Box\n    {...props}\n    mx=\"auto\"\n    p={2}\n    css={{\n      maxWidth: '1024px',\n      minWidth: '320px',\n    }}\n  />\n);\n\nexport default Container;\n","import { createGlobalStyle } from 'styled-components';\n\nconst theme = {\n  breakpoints: ['40em', '52em', '64em'],\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64],\n  colors: {\n    blue: '#07c',\n    lightgray: '#f6f6ff',\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  fonts: {\n    sans: 'system-ui, sans-serif',\n    mono: 'Menlo, monospace',\n  },\n  shadows: {\n    small: '0 0 4px rgba(0, 0, 0, .125)',\n    large: '0 0 24px rgba(0, 0, 0, .125)',\n  },\n};\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Kodchasan:400,700');\n  body {\n    padding: 0;\n    margin: 0;\n    font-family: Kodchasan;\n  }\n  a {\n    text-decoration: none;\n  }\n  ul {\n    margin: 0 auto;\n    padding: 0 auto;\n    // list-style-type: none;\n  }\n  ul>p {\n    margin: 0 auto;\n    margin-block-start: 0;\n    margin-block-end: 0;\n  }\n`;\n\nexport default theme;\nexport { GlobalStyle };\n","import React from 'react';\nimport { StaticQuery, graphql, Link } from 'gatsby';\nimport { Flex, Box, Heading } from \"rebass\";\nimport styled from 'styled-components';\n\n// import cbpSeal from '../assets/canadian-border-patrol-logo.png';\n\nclass Title extends React.Component {\n  render() {\n    const Logo = styled.img`\n      max-width: 100%;\n      height: auto;\n    `\n    const cbpSeal = '/canadian-border-patrol-logo.png'\n    return(\n      <StaticQuery\n        query={titleQuery}\n        render={data => {\n          const siteTitle = data.site.siteMetadata.title;\n          return(\n            <Flex\n              flexWrap='nowrap'\n              flexDirection='row'\n              justifyContent='flex-start'\n              alignItems='center'\n            >\n              <Box width={[1/8, 1/10]} mr={2}>\n                <Link to='/'>\n                  <Logo\n                    src={cbpSeal}\n                    alt={`${siteTitle} Seal`}\n                  />\n                </Link>\n              </Box>\n              <Heading textAlign=\"left\" fontSize={[4,5,6]}>\n                <Link\n                  to='/'\n                  css={{\n                    textDecoration: 'none',\n                    color: 'inherit'\n                  }}\n                >\n                  {siteTitle}\n                </Link>\n              </Heading>\n            </Flex>\n          )\n        }}\n      />\n    )\n  }\n}\n\nconst titleQuery = graphql`\n  query TitleQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n\nexport default Title;\n","import React from 'react';\nimport { Flex, Link } from 'rebass';\nimport { FaPodcast, FaRss, FaTwitter } from 'react-icons/fa';\n\nconst LinkBar = props => {\n  const rssFeed =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:8000/rss.xml'\n      : 'https://canadianborderpatrol.com/rss.xml';\n  return (\n    <Flex\n      flexWrap=\"nowrap\"\n      flexDirection=\"row\"\n      justifyContent=\"flex-start\"\n      alignItems=\"center\"\n      p={1}\n      pr={2}\n    >\n      <Link px={[1, 2]} fontSize={[2, 3]} href=\"http://www.apple.com\">\n        <FaPodcast />\n      </Link>\n      <Link px={[1, 2]} fontSize={[2, 3]} href={rssFeed}>\n        <FaRss />\n      </Link>\n      <Link\n        px={[1, 2]}\n        fontSize={[2, 3]}\n        href=\"https://twitter.com/canborderpatrol\"\n      >\n        <FaTwitter />\n      </Link>\n    </Flex>\n  );\n};\n\nexport default LinkBar;\n","import React from 'react';\nimport { Flex, Box } from 'rebass';\n\nimport Title from './title';\nimport LinkBar from './linkbar';\n\n\nclass Header extends React.Component {\n  render() {\n    return(\n      <Flex\n        justifyContent='space-between'\n        alignItems='center' \n      >\n        <Box flex='1 1 auto'>\n          <Title/>\n        </Box>\n        <Box flex='1 1 auto'>\n          <LinkBar />\n        </Box>\n      </Flex>\n    )\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, Box, Text, Link } from 'rebass';\nimport styled from 'styled-components';\nimport { FaTwitter } from 'react-icons/fa';\n\nconst BioItem = props => {\n  return (\n    <Flex\n      flexWrap=\"nowrap\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      fontSize={[1, 2, 3]}\n    >\n      <Box>\n        <Avatar src={props.bioImage} alt={props.bioName} />\n      </Box>\n      <Text\n        mt={1}\n        mb={2}\n        fontWeight=\"bold\"\n        css={{ textDecoration: 'underline' }}\n      >\n        {props.bioName}\n      </Text>\n      <Text mb={1}>{props.bioDescription}</Text>\n      <Link href={`https://twitter.com/${props.bioTwitter}`}>\n        <FaTwitter />\n      </Link>\n    </Flex>\n  );\n};\n\nBioItem.propTypes = {\n  bioImage: PropTypes.string,\n  bioName: PropTypes.string,\n  bioDescription: PropTypes.string,\n  bioTwitter: PropTypes.string,\n};\n\nexport default BioItem;\n\nconst Avatar = styled.img`\n  width: auto;\n  max-height: 100px;\n  align-self: 'start';\n  border-radius: 100%;\n`;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { Flex, Box } from 'rebass';\nimport BioItem from './bioitem';\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { authors } = data.site.siteMetadata;\n        const bioWidth = 1 / authors.length;\n        return (\n          <Flex flexWrap=\"nowrap\" flexDirection=\"row\">\n            {authors.map((author, ind) => (\n              <Box\n                flex=\"1 1 auto\"\n                mx={2}\n                width={bioWidth}\n                key={`author-${ind}`}\n              >\n                <BioItem\n                  key={`${author.name}-${ind}`}\n                  bioImage={`/${author.avatar}`}\n                  bioName={author.name}\n                  bioDescription={author.description}\n                  bioTwitter={author.social.twitter}\n                  alignImage={ind % 2 !== 0 ? 'left' : 'right'}\n                />\n              </Box>\n            ))}\n          </Flex>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        authors {\n          name\n          description\n          avatar\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import React from 'react';\nimport { Box } from 'rebass';\nimport styled from 'styled-components';\n\nimport Bio from './bio';\n\nclass Footer extends React.Component {\n  render() {\n    const FootText = styled.footer`\n      text-align: center;\n    `;\n    return(\n      <>\n        <Bio />\n        <Box fontSize={0}>\n          <FootText>© {new Date().getFullYear()} Canadian Border Patrol</FootText>\n        </Box>\n      </>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport Container from './container';\nimport theme, { GlobalStyle } from '../theme';\nimport Header from './header';\nimport Footer from './footer';\n\nconst Layout = ({ children }) => (\n  <ThemeProvider theme={theme}>\n    <Container>\n      <GlobalStyle />\n      <Header />\n      <main>{children}</main>\n      <Footer />\n    </Container>\n  </ThemeProvider>\n);\n\nexport default Layout;\n","import React from 'react';\nimport { Text } from 'rebass';\nimport { Link } from 'gatsby';\n\nconst SimpleGatsbyLink = props => (\n  <Text\n    textAlign={props.textAlign}\n    fontSize={props.fontSize}\n    fontWeight={props.fontWeight}\n  >\n    <Link\n      to={props.to}\n      css={{\n        textDecoration: 'none',\n        color: 'inherit'\n      }}\n    >\n      {props.children}\n    </Link>\n  </Text>\n);\n\nexport default SimpleGatsbyLink;\n","import React from 'react';\nimport { Flex, Box, Text } from 'rebass';\n\nimport SimpleGatsbyLink from './simplegatsbylink';\n\nconst EpisodeListItem = props => (\n  <Flex flexWrap=\"nowrap\" flexDirection=\"column\" mx={2}>\n    <Flex flexWrap=\"wrap\" flexDirection=\"row\" alignItems=\"baseline\" mb={2}>\n      <SimpleGatsbyLink fontSize={[3, 4, 5]} fontWeight=\"bold\" to={props.slug}>\n        {props.title}\n      </SimpleGatsbyLink>\n      <Text fontSize={[0, 1, 2]} ml={2} css={{ fontStyle: 'italic' }}>\n        {props.date}\n      </Text>\n    </Flex>\n    <Box pl={[2, 3, 4]}>{props.shortExcerpt}</Box>\n  </Flex>\n);\n\nexport default EpisodeListItem;\n","import React from 'react';\nimport { Flex } from 'rebass';\n\nimport EpisodeListItem from './episodelistitem';\nimport Divider from './divider';\n\nconst EpisodeList = props => (\n  <Flex flexWrap=\"nowrap\" flexDirection=\"column\" justifyContent=\"center\">\n    <Divider width={1 / 2} />\n    {props.posts.map(post => (\n      <React.Fragment key={post.slug}>\n        <EpisodeListItem\n          title={post.title}\n          slug={post.slug}\n          date={post.date}\n          shortExcerpt={post.excerpt}\n        />\n        <Divider width={1 / 2} />\n      </React.Fragment>\n    ))}\n  </Flex>\n);\n\nexport default EpisodeList;\n"],"sourceRoot":""}