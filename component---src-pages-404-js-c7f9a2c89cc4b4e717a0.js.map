{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/mountains.png","webpack:///./src/components/seo.js","webpack:///./src/components/container.js","webpack:///./src/theme/index.js","webpack:///./src/components/title.js","webpack:///./src/components/linkbar.js","webpack:///./src/components/header.js","webpack:///./src/components/bioitem.js","webpack:///./src/components/bio.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","location","_components_seo__WEBPACK_IMPORTED_MODULE_2__","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","createContext","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","Object","assign","json","p","SEO","description","lang","meta","keywords","_public_static_d_3718716973_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","console","log","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","authors","social","twitter","concat","length","join","defaultProps","maxWidth","minWidth","Container","react_default","_StyledBox","mx","GlobalStyle","createGlobalStyle","_templateObject","mountains","theme","breakpoints","fontSizes","colors","blue","lightgray","flagred","space","fonts","serif","sans","mono","shadows","small","large","textAlign","Title","_747751825","siteDescription","dist","width","justifyContent","alignItems","flexDirection","flex","gatsby_browser_entry","to","Logo","src","alt","_StyledHeading","fontSize","color","styled","img","withConfig","displayName","componentId","LinkBar","links","text","href","icon","iTunesNoteIcon","googlePlayIcon","stitcherIcon","rssIcon","twitterIcon","flexWrap","pr","map","link","index","array","bg","Header","Background","linkbar","div","textDecoration","BioItem","Avatar","bioImage","bioName","_StyledText","mt","mb","fontWeight","bioDescription","bioTwitter","Bio","_2975466106","bioWidth","author","ind","key","bioitem","avatar","alignImage","Footer","Fragment","bio","FootText","Date","getFullYear","footer","Content","Layout","children","styled_components_browser_esm","container","header"],"mappings":"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","file":"component---src-pages-404-js-c7f9a2c89cc4b4e717a0.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/mountains-4f18cc1481d8cf98668cdf2d38ea2280.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            authors {\n              name\n              description\n              social {\n                twitter\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  console.log(site);\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.authors[0].social.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport { Box } from 'rebass';\n\nconst Container = props => (\n  <Box\n    {...props}\n    mx=\"auto\"\n    p={2}\n    css={{\n      maxWidth: '1024px',\n      minWidth: '320px',\n    }}\n  />\n);\n\nexport default Container;\n","import { createGlobalStyle } from 'styled-components';\nimport mountains from '../assets/mountains.png';\n\nconst theme = {\n  breakpoints: ['26em', '40em', '54em'],\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64],\n  colors: {\n    blue: '#07c',\n    lightgray: '#f6f6ff',\n    flagred: '#eb2d37'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  fonts: {\n    serif: 'Libre Baskerville, Times New Roman, serif',\n    sans: 'system-ui, sans-serif',\n    mono: 'Menlo, monospace',\n  },\n  shadows: {\n    small: '0 0 4px rgba(0, 0, 0, .125)',\n    large: '0 0 24px rgba(0, 0, 0, .125)',\n  },\n};\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Libre+Baskerville:400,700');\n  html, body {\n    padding: 0;\n    margin: 0;\n    font-family: Helvetica, Arial, sans-serif;\n    background-image: url(${mountains});\n    background-size: cover;\n    background-position: center;\n    background-attachment: fixed;\n    box-sizing: border-box;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  a {\n    text-decoration: none;\n  }\n  ul {\n    margin: 0 auto;\n    padding: 0 auto;\n  }\n  ul p {\n    margin: 0 auto;\n  }\n`;\n\nexport default theme;\nexport { GlobalStyle };\n","import React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport { Flex, Box, Heading } from \"rebass\";\nimport styled from 'styled-components';\n\n// Logo styling trick allows automatic resizing,\n// but if container is larger than image size, the image won't center\n// Responsive widths are chosen to center the logo and keep it responsive\n\nconst Title = () => {\n  const cbpSeal = '/cbp-logo-400.png';\n  const { site } = useStaticQuery(titleQuery);\n  const siteTitle = site.siteMetadata.title;\n  const siteDescription = site.siteMetadata.description;\n  return(\n    <Flex\n      width={1}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      flexDirection=\"column\">\n      <Box\n        width={[.5, null, 300]}\n        flex=\"0 1 auto\"\n      >\n        <Link to='/'>\n          <Logo\n            src={cbpSeal}\n            alt={`${siteTitle} Seal`}\n          />\n        </Link>\n      </Box>\n      <Heading\n        fontSize={[3]}\n        color=\"flagred\"\n        css={{textAlign: 'center'}}>\n        {siteDescription}\n      </Heading>\n    </Flex>\n  )\n}\n\nconst titleQuery = graphql`\n  query TitleQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`;\n\nexport default Title;\n\nconst Logo = styled.img`\n  max-width: 100%;\n  height: auto;\n`\n","import React from 'react';\nimport { Flex, Link, Text, Button } from 'rebass';\nimport styled from 'styled-components';\nimport { Icon } from '@iconify/react';\nimport iTunesNoteIcon from \"@iconify/icons-fa-brands/itunes-note\";\nimport googlePlayIcon from \"@iconify/icons-fa-brands/google-play\";\nimport stitcherIcon from \"@iconify/icons-simple-icons/stitcher\";\nimport rssIcon from \"@iconify/icons-fa-solid/rss\";\nimport twitterIcon from \"@iconify/icons-fa-brands/twitter\";\n\n\nconst LinkBar = props => {\n  const rssFeed =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:8000/rss.xml'\n      : 'https://canadianborderpatrol.com/rss.xml';\n  const links = [\n    {\n      text: \"iTunes\",\n      href: \"https://podcasts.apple.com/ca/podcast/canadian-border-patrol/id1463751515\",\n      icon: iTunesNoteIcon,\n    },\n    {\n      text: \"Google Play\",\n      href: \"https://play.google.com/music/listen?u=0#/ps/Ijfvdnyyavpl4jo4witxkakz5f4\",\n      icon: googlePlayIcon,\n    },\n    {\n      text: \"Stitcher\",\n      href: \"https://www.stitcher.com/podcast/canadian-border-patrol?refid=stpr\",\n      icon: stitcherIcon,\n    },\n    {\n      text: \"RSS\",\n      href: rssFeed,\n      icon: rssIcon,\n    },\n    {\n      text: \"Twitter\",\n      href: \"https://podcasts.apple.com/ca/podcast/canadian-border-patrol/id1463751515\",\n      icon: twitterIcon,\n    }\n  ]\n  return (\n    <Flex\n      flexWrap=\"wrap\"\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      p={2}\n      pr={2}\n    >\n      {links.map((link, index, array) => {\n        return (\n          <Button bg='flagred' m={1}>\n            <Link\n              color='white'\n              href={link.href}>\n              <Icon icon={link.icon} /> {link.text}\n            </Link>\n          </Button>\n        )\n      })}\n    </Flex>\n  );\n}\n\nexport default LinkBar;\n","import React from 'react';\nimport { Flex, Box } from 'rebass';\nimport styled from 'styled-components';\nimport Title from './title';\nimport LinkBar from './linkbar';\n\n\nconst Header = () => {\n  return(\n    <Background>\n      <Flex\n        width={1}\n        flexWrap='noflex'\n        flexDirection='column'\n        alignItems='center'>\n        <Title />\n        <LinkBar />\n      </Flex>\n    </Background>\n  )\n}\n\nexport default Header;\n\nconst Background = styled.div`\n  background-color: #FFFFFFE6;\n  padding: .5rem .5rem;\n  margin-bottom: .5rem;\n  border-radius: 15px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, Box, Text, Link } from 'rebass';\nimport styled from 'styled-components';\nimport { Icon } from '@iconify/react';\nimport twitterIcon from \"@iconify/icons-fa-brands/twitter\";\n\nconst BioItem = props => {\n  return (\n    <Flex\n      flexWrap=\"nowrap\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      fontSize={[1, 2, 3]}\n    >\n      <Box>\n        <Avatar src={props.bioImage} alt={props.bioName} />\n      </Box>\n      <Text\n        mt={1}\n        mb={2}\n        fontWeight=\"bold\"\n        css={{ textDecoration: 'underline' }}\n      >\n        {props.bioName}\n      </Text>\n      <Text mb={1}>{props.bioDescription}</Text>\n      <Link href={`https://twitter.com/${props.bioTwitter}`}>\n        <Icon icon={twitterIcon} />\n      </Link>\n    </Flex>\n  );\n};\n\nBioItem.propTypes = {\n  bioImage: PropTypes.string,\n  bioName: PropTypes.string,\n  bioDescription: PropTypes.string,\n  bioTwitter: PropTypes.string,\n};\n\nexport default BioItem;\n\nconst Avatar = styled.img`\n  width: auto;\n  max-height: 100px;\n  align-self: 'start';\n  border-radius: 100%;\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Flex, Box } from 'rebass';\nimport BioItem from './bioitem';\n\nconst Bio = () => {\n  const { site } = useStaticQuery(bioQuery);\n  const { authors } = site.siteMetadata;\n  const bioWidth = 1 / authors.length;\n  return (\n    <Flex flexWrap=\"nowrap\" flexDirection=\"row\">\n      {authors.map((author, ind) => (\n        <Box\n          flex=\"1 1 auto\"\n          mx={2}\n          width={bioWidth}\n          key={`author-${ind}`}\n        >\n          <BioItem\n            key={`${author.name}-${ind}`}\n            bioImage={`/${author.avatar}`}\n            bioName={author.name}\n            bioDescription={author.description}\n            bioTwitter={author.social.twitter}\n            alignImage={ind % 2 !== 0 ? 'left' : 'right'}\n          />\n        </Box>\n      ))}\n    </Flex>\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        authors {\n          name\n          description\n          avatar\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import React from 'react';\nimport { Box } from 'rebass';\nimport styled from 'styled-components';\n\nimport Bio from './bio';\n\nconst Footer = () => {\n  return(\n    <>\n      <Bio />\n      <Box fontSize={0}>\n        <FootText>© {new Date().getFullYear()} Canadian Border Patrol</FootText>\n      </Box>\n    </>\n  );\n}\n\nexport default Footer;\n\nconst FootText = styled.footer`\n  text-align: center;\n`;\n","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Container from './container';\nimport theme, { GlobalStyle } from '../theme';\nimport Header from './header';\nimport Footer from './footer';\n\nconst Layout = ({ children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <GlobalStyle />\n        <Header />\n        <Content>\n          <main>{children}</main>\n          <Footer />\n        </Content>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default Layout;\n\nconst Content = styled.div`\n  background-color: #FFFFFFE6;\n  padding: 3rem 3rem;\n  border-radius: 15px;\n`;\n"],"sourceRoot":""}