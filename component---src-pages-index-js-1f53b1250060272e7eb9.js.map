{"version":3,"sources":["webpack:///./node_modules/@iconify/react/fa-solid/arrow-right.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/mountains.png","webpack:///./src/components/seo.js","webpack:///./src/components/divider.js","webpack:///./src/components/container.js","webpack:///./src/theme/index.js","webpack:///./src/components/title.js","webpack:///./src/components/linkbar.js","webpack:///./src/components/header.js","webpack:///./src/components/bioitem.js","webpack:///./src/components/bio.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/simplegatsbylink.js","webpack:///./src/components/episodelistitem.js","webpack:///./src/components/episodelist.js"],"names":["arrow_right","body","width","height","__webpack_require__","d","__webpack_exports__","pageQuery","SiteIndex","props","thePosts","data","allMarkdownRemark","edges","map","post","number","node","frontmatter","title","slug","fields","date","excerpt","react_default","a","createElement","layout","seo","keywords","episodelist","posts","simplegatsbylink","textAlign","fontSize","fontWeight","to","icon","arrowRight","divider","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","p","SEO","description","lang","meta","site","_public_static_d_3718716973_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","console","log","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","authors","social","twitter","concat","length","join","defaultProps","arrayOf","styled_components__WEBPACK_IMPORTED_MODULE_1__","rebass__WEBPACK_IMPORTED_MODULE_2__","Divider","flexWrap","justifyContent","my","StyledHr","styled","hr","withConfig","displayName","componentId","Container","_StyledBox","mx","_css","maxWidth","minWidth","GlobalStyle","createGlobalStyle","_templateObject","mountains","theme","breakpoints","fontSizes","colors","blue","lightgray","space","fonts","serif","sans","mono","shadows","small","large","Title","siteTitle","_3009533391","dist","flex","gatsby_browser_entry","Logo","src","alt","img","LinkBar","links","text","href","iTunesNoteIcon","googlePlayIcon","stitcherIcon","rssIcon","twitterIcon","flexDirection","alignItems","pr","link","index","array","Fragment","StyledLink","px","Link","Header","linkbar","BioItem","Avatar","bioImage","bioName","_StyledText","mt","mb","textDecoration","bioDescription","bioTwitter","Bio","_2975466106","bioWidth","author","ind","key","bioitem","avatar","alignImage","Footer","bio","FootText","Date","getFullYear","footer","Content","Layout","children","styled_components_browser_esm","container","header","div","SimpleGatsbyLink","_StyledLink","color","EpisodeListItem","ml","fontStyle","pl","shortExcerpt","EpisodeList","episodelistitem"],"mappings":"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","file":"component---src-pages-index-js-1f53b1250060272e7eb9.js","sourcesContent":["export default {\n\t\"body\": \"<path d=\\\"M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 448,\n\t\"height\": 512\n};\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport { Icon } from '@iconify/react';\nimport arrowRight from \"@iconify/react/fa-solid/arrow-right\";\nimport { Flex, Text, Box } from 'rebass';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport EpisodeList from '../components/episodelist';\nimport Divider from '../components/divider';\nimport SimpleGatsbyLink from '../components/simplegatsbylink';\n\nconst SiteIndex = props => {\n  const { data } = props;\n  const thePosts = data.allMarkdownRemark.edges.map(post => {\n    return {\n      number: post.node.frontmatter.number,\n      title: post.node.frontmatter.title,\n      slug: post.node.fields.slug,\n      date: post.node.frontmatter.date,\n      excerpt: post.node.excerpt,\n    };\n  });\n\n  return (\n    <Layout>\n      <SEO\n        title=\"All posts\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n      <EpisodeList posts={thePosts} />\n      <SimpleGatsbyLink\n        textAlign=\"center\"\n        fontSize={[2, 3, 4]}\n        fontWeight=\"bold\"\n        to=\"/episodes/\"\n      >\n        All Episodes <Icon icon={arrowRight} />\n      </SimpleGatsbyLink>\n      <Divider width={1 / 2} />\n    </Layout>\n  );\n};\n\nexport default SiteIndex;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 5\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            number\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/mountains-4f18cc1481d8cf98668cdf2d38ea2280.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            authors {\n              name\n              description\n              social {\n                twitter\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  console.log(site);\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.authors[0].social.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Flex, Box } from 'rebass';\n\nconst Divider = props => (\n  <Flex flexWrap=\"flex\" justifyContent=\"center\">\n    <Box width={props.width} my={2}>\n      <StyledHr />\n    </Box>\n  </Flex>\n);\n\nexport default Divider;\n\nconst StyledHr = styled.hr`\n  background-color: red;\n`;\n","import React from 'react';\nimport { Box } from 'rebass';\n\nconst Container = props => (\n  <Box\n    {...props}\n    mx=\"auto\"\n    p={2}\n    css={{\n      maxWidth: '1024px',\n      minWidth: '320px',\n    }}\n  />\n);\n\nexport default Container;\n","import { createGlobalStyle } from 'styled-components';\nimport mountains from '../assets/mountains.png';\n\nconst theme = {\n  breakpoints: ['26em', '40em', '54em'],\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64],\n  colors: {\n    blue: '#07c',\n    lightgray: '#f6f6ff',\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  fonts: {\n    serif: 'Libre Baskerville, Times New Roman, serif',\n    sans: 'system-ui, sans-serif',\n    mono: 'Menlo, monospace',\n  },\n  shadows: {\n    small: '0 0 4px rgba(0, 0, 0, .125)',\n    large: '0 0 24px rgba(0, 0, 0, .125)',\n  },\n};\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Libre+Baskerville:400,700');\n  html, body {\n    padding: 0;\n    margin: 0;\n    font-family: Helvetica, Arial, sans-serif;\n    background-image: url(${mountains});\n    background-size: cover;\n    background-position: center;\n    background-attachment: fixed;\n    box-sizing: border-box;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  a {\n    text-decoration: none;\n  }\n  ul {\n    margin: 0 auto;\n    padding: 0 auto;\n  }\n  ul p {\n    margin: 0 auto;\n  }\n`;\n\nexport default theme;\nexport { GlobalStyle };\n","import React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport { Flex, Box, Heading } from \"rebass\";\nimport styled from 'styled-components';\n\n// Logo styling trick allows automatic resizing,\n// but if container is larger than image size, the image won't center\n// Responsive widths are chosen to center the logo and keep it responsive\n\nconst Title = () => {\n  const cbpSeal = '/cbp-logo-400.png';\n  const { site } = useStaticQuery(titleQuery);\n  const siteTitle = site.siteMetadata.title;\n  return(\n    <Flex width={1} justifyContent=\"center\">\n      <Box\n        width={[.5, null, 300]}\n        flex=\"0 1 auto\"\n      >\n        <Link to='/'>\n          <Logo\n            src={cbpSeal}\n            alt={`${siteTitle} Seal`}\n          />\n        </Link>\n      </Box>\n    </Flex>\n  )\n}\n\nconst titleQuery = graphql`\n  query TitleQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n\nexport default Title;\n\nconst Logo = styled.img`\n  max-width: 100%;\n  height: auto;\n`\n","import React from 'react';\nimport { Flex, Link, Text } from 'rebass';\nimport styled from 'styled-components';\nimport { Icon } from '@iconify/react';\nimport iTunesNoteIcon from \"@iconify/react/fa-brands/itunes-note\";\nimport googlePlayIcon from \"@iconify/react/fa-brands/google-play\";\nimport stitcherIcon from \"@iconify/react/simple-icons/stitcher\";\nimport rssIcon from \"@iconify/react/fa-solid/rss\";\nimport twitterIcon from \"@iconify/react/fa-brands/twitter\";\n\n\nconst LinkBar = props => {\n  const rssFeed =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:8000/rss.xml'\n      : 'https://canadianborderpatrol.com/rss.xml';\n  const links = [\n    {\n      text: \"iTunes\",\n      href: \"https://podcasts.apple.com/ca/podcast/canadian-border-patrol/id1463751515\",\n      icon: iTunesNoteIcon,\n    },\n    {\n      text: \"Google Play\",\n      href: \"https://play.google.com/music/listen?u=0#/ps/Ijfvdnyyavpl4jo4witxkakz5f4\",\n      icon: googlePlayIcon,\n    },\n    {\n      text: \"Stitcher\",\n      href: \"https://www.stitcher.com/podcast/canadian-border-patrol?refid=stpr\",\n      icon: stitcherIcon,\n    },\n    {\n      text: \"RSS\",\n      href: rssFeed,\n      icon: rssIcon,\n    },\n    {\n      text: \"Twitter\",\n      href: \"https://podcasts.apple.com/ca/podcast/canadian-border-patrol/id1463751515\",\n      icon: twitterIcon,\n    }\n  ]\n  return (\n    <Flex\n      flexWrap=\"nowrap\"\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      p={2}\n      pr={2}\n    >\n      <Text fontSize={[1, 2, 3]}>\n        {links.map((link, index, array) => {\n          let divider = \"\";\n          if (index !== array.length - 1) {\n            divider = \" | \"\n          }\n          return (\n            <>\n              <StyledLink\n                px={[1, 2]}\n                href={link.href}>\n                <Icon icon={link.icon} /> {link.text}\n              </StyledLink>\n              {divider}\n            </>\n          )\n        })}\n      </Text>\n    </Flex>\n  );\n}\n\nexport default LinkBar;\n\nconst StyledLink = styled(Link)`\n  color: black;\n`;\n","import React from 'react';\nimport { Flex, Box } from 'rebass';\n\nimport Title from './title';\nimport LinkBar from './linkbar';\n\n\nconst Header = () => {\n  return(\n    <Flex\n      width={1}\n      flexWrap='noflex'\n      flexDirection='column'\n      alignItems='center'>\n      <Title />\n      <LinkBar />\n    </Flex>\n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, Box, Text, Link } from 'rebass';\nimport styled from 'styled-components';\nimport { Icon } from '@iconify/react';\nimport twitterIcon from \"@iconify/react/fa-brands/twitter\";\n\nconst BioItem = props => {\n  return (\n    <Flex\n      flexWrap=\"nowrap\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      fontSize={[1, 2, 3]}\n    >\n      <Box>\n        <Avatar src={props.bioImage} alt={props.bioName} />\n      </Box>\n      <Text\n        mt={1}\n        mb={2}\n        fontWeight=\"bold\"\n        css={{ textDecoration: 'underline' }}\n      >\n        {props.bioName}\n      </Text>\n      <Text mb={1}>{props.bioDescription}</Text>\n      <Link href={`https://twitter.com/${props.bioTwitter}`}>\n        <Icon icon={twitterIcon} />\n      </Link>\n    </Flex>\n  );\n};\n\nBioItem.propTypes = {\n  bioImage: PropTypes.string,\n  bioName: PropTypes.string,\n  bioDescription: PropTypes.string,\n  bioTwitter: PropTypes.string,\n};\n\nexport default BioItem;\n\nconst Avatar = styled.img`\n  width: auto;\n  max-height: 100px;\n  align-self: 'start';\n  border-radius: 100%;\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Flex, Box } from 'rebass';\nimport BioItem from './bioitem';\n\nconst Bio = () => {\n  const { site } = useStaticQuery(bioQuery);\n  const { authors } = site.siteMetadata;\n  const bioWidth = 1 / authors.length;\n  return (\n    <Flex flexWrap=\"nowrap\" flexDirection=\"row\">\n      {authors.map((author, ind) => (\n        <Box\n          flex=\"1 1 auto\"\n          mx={2}\n          width={bioWidth}\n          key={`author-${ind}`}\n        >\n          <BioItem\n            key={`${author.name}-${ind}`}\n            bioImage={`/${author.avatar}`}\n            bioName={author.name}\n            bioDescription={author.description}\n            bioTwitter={author.social.twitter}\n            alignImage={ind % 2 !== 0 ? 'left' : 'right'}\n          />\n        </Box>\n      ))}\n    </Flex>\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        authors {\n          name\n          description\n          avatar\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import React from 'react';\nimport { Box } from 'rebass';\nimport styled from 'styled-components';\n\nimport Bio from './bio';\n\nconst Footer = () => {\n  return(\n    <>\n      <Bio />\n      <Box fontSize={0}>\n        <FootText>© {new Date().getFullYear()} Canadian Border Patrol</FootText>\n      </Box>\n    </>\n  );\n}\n\nexport default Footer;\n\nconst FootText = styled.footer`\n  text-align: center;\n`;\n","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Container from './container';\nimport theme, { GlobalStyle } from '../theme';\nimport Header from './header';\nimport Footer from './footer';\n\nconst Layout = ({ children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <GlobalStyle />\n        <Header />\n        <Content>\n          <main>{children}</main>\n          <Footer />\n        </Content>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default Layout;\n\nconst Content = styled.div`\n  background-color: white;\n  padding: 3rem 3rem;\n  border-radius: 15px;\n`;\n","import React from 'react';\nimport { Text } from 'rebass';\nimport { Link } from 'gatsby';\n\nconst SimpleGatsbyLink = props => (\n  <Text\n    textAlign={props.textAlign}\n    fontSize={props.fontSize}\n    fontWeight={props.fontWeight}\n  >\n    <Link\n      to={props.to}\n      css={{\n        textDecoration: 'none',\n        color: 'inherit'\n      }}\n    >\n      {props.children}\n    </Link>\n  </Text>\n);\n\nexport default SimpleGatsbyLink;\n","import React from 'react';\nimport { Flex, Box, Text } from 'rebass';\n\nimport SimpleGatsbyLink from './simplegatsbylink';\n\nconst EpisodeListItem = props => (\n  <Flex flexWrap=\"nowrap\" flexDirection=\"column\" mx={2}>\n    <Flex flexWrap=\"wrap\" flexDirection=\"row\" alignItems=\"baseline\" mb={2}>\n      <SimpleGatsbyLink fontSize={[3, 4, 5]} fontWeight=\"bold\" to={props.slug}>\n        {props.title}\n      </SimpleGatsbyLink>\n      <Text fontSize={[0, 1, 2]} ml={2} css={{ fontStyle: 'italic' }}>\n        Ep. {props.number} - {props.date}\n      </Text>\n    </Flex>\n    <Text fontSize={[1, 2, 3]} pl={[2, 3, 4]}>{props.shortExcerpt}</Text>\n  </Flex>\n);\n\nexport default EpisodeListItem;\n","import React from 'react';\nimport { Flex } from 'rebass';\n\nimport EpisodeListItem from './episodelistitem';\nimport Divider from './divider';\n\nconst EpisodeList = props => (\n  <Flex flexWrap=\"nowrap\" flexDirection=\"column\" justifyContent=\"center\">\n    {/* <Divider width={1 / 2} /> */}\n    {props.posts.map(post => (\n      <React.Fragment key={post.slug}>\n        <EpisodeListItem\n          number={post.number}\n          title={post.title}\n          date={post.date}\n          slug={post.slug}\n          shortExcerpt={post.excerpt}\n        />\n        <Divider width={1 / 2} />\n      </React.Fragment>\n    ))}\n  </Flex>\n);\n\nexport default EpisodeList;\n"],"sourceRoot":""}