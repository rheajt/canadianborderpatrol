{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js","webpack:///./src/components/layout.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","_post$frontmatter$url","frontmatter","url","split","id","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","location","_components_seo__WEBPACK_IMPORTED_MODULE_6__","description","excerpt","style","fontFamily","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_4__","boxShadow","textDecoration","color","to","Object","assign","scale","display","marginBottom","rhythm","date","controls","src","type","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","fields","slug","rel","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","SEO","lang","meta","keywords","_public_static_d_737910624_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","bioQuery","Bio","react_default","gatsby_browser_entry","authors","console","log","jordan","gridTemplateColumns","gridGap","map","ind","key","avatar","alt","marginRight","maxWidth","height","alignSelf","borderRadius","order","href","social","twitter","_692709828","Layout","marginLeft","bio","Date","getFullYear"],"mappings":"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","file":"component---src-templates-blog-post-js-b890ed3498b8b6c30e77.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { rhythm, scale } from '../utils/typography';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const { previous, next } = this.props.pageContext;\n\n    const [__, id] = post.frontmatter.url.split('id=');\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <header>\n          <h3\n            style={{\n              fontFamily: `Montserrat, sans-serif`,\n              marginTop: 0,\n            }}\n          >\n            <Link\n              style={{\n                boxShadow: `none`,\n                textDecoration: `none`,\n                color: `inherit`,\n              }}\n              to={`/`}\n            >\n              {siteTitle} investigates...\n            </Link>\n          </h3>\n        </header>\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        {/* <iframe frameBorder=\"0\" width=\"400\" src={post.frontmatter.url} /> */}\n\n        <audio controls>\n          <source\n            src={`https://docs.google.com/uc?export=download&id=${id}`}\n            type=\"audio/mp3\"\n          />\n        </audio>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        authors {\n          name\n          description\n          siteUrl\n          social {\n            twitter\n          }\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        url\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            authors {\n              name\n              description\n              siteUrl\n              social {\n                twitter\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../utils/typography';\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { authors } = data.site.siteMetadata;\n\n        console.log(data.jordan);\n        return (\n          <div\n            style={{\n              display: 'grid',\n              gridTemplateColumns: '1fr 1fr',\n              gridGap: '1rem',\n            }}\n          >\n            {authors.map((author, ind) => (\n              <div\n                key={`${author.name}-${ind}`}\n                style={{\n                  display: `flex`,\n                  marginBottom: rhythm(2.5),\n                }}\n              >\n                <img\n                  src={`/${author.avatar}`}\n                  alt={author.name}\n                  style={{\n                    marginRight: rhythm(1 / 2),\n                    marginBottom: 0,\n                    maxWidth: '100px',\n                    height: 'auto',\n                    alignSelf: 'start',\n                    borderRadius: '100%',\n                    order: ind % 2 !== 0 ? 1 : 0,\n                  }}\n                />\n                <p>\n                  {author.description}\n                  {` `}\n                  <a href={`https://twitter.com/${author.social.twitter}`}>\n                    You should follow him on Twitter\n                  </a>\n                </p>\n              </div>\n            ))}\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        authors {\n          name\n          description\n          avatar\n          siteUrl\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport { rhythm, scale } from '../utils/typography';\nimport Bio from './bio';\n\nclass Layout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <main>{children}</main>\n        <Bio />\n        <footer>© {new Date().getFullYear()} Canadian Border Patrol</footer>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n"],"sourceRoot":""}