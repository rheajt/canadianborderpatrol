{"version":3,"sources":["webpack:///./src/pages/episodes.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/mountains.png","webpack:///./src/components/seo.js","webpack:///./src/components/divider.js","webpack:///./src/components/container.js","webpack:///./src/theme/index.js","webpack:///./src/components/title.js","webpack:///./src/components/linkbar.js","webpack:///./src/components/header.js","webpack:///./src/components/bioitem.js","webpack:///./src/components/bio.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/simplegatsbylink.js","webpack:///./src/components/episodelistitem.js","webpack:///./src/components/episodelist.js"],"names":["AllEpisodesIndex","render","thePosts","this","props","data","allMarkdownRemark","edges","map","post","number","node","frontmatter","title","slug","fields","date","excerpt","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","_components_episodelist__WEBPACK_IMPORTED_MODULE_5__","posts","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","p","SEO","description","lang","meta","site","_public_static_d_3718716973_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","console","log","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","authors","social","twitter","concat","length","join","defaultProps","arrayOf","styled_components__WEBPACK_IMPORTED_MODULE_1__","rebass__WEBPACK_IMPORTED_MODULE_2__","Divider","flexWrap","justifyContent","width","my","StyledHr","styled","hr","withConfig","displayName","componentId","Container","react_default","_StyledBox","mx","_css","maxWidth","minWidth","GlobalStyle","createGlobalStyle","_templateObject","mountains","theme","breakpoints","fontSizes","colors","blue","lightgray","flagred","space","fonts","serif","sans","mono","shadows","small","large","Title","_747751825","siteTitle","siteDescription","dist","alignItems","flexDirection","flex","gatsby_browser_entry","to","Logo","src","alt","_StyledHeading","fontSize","color","textAlign","img","LinkBar","links","text","href","icon","iTunesNoteIcon","googlePlayIcon","stitcherIcon","rssIcon","twitterIcon","pr","link","index","array","bg","Header","Background","linkbar","div","BioItem","Avatar","bioImage","bioName","_StyledText","mt","mb","fontWeight","textDecoration","bioDescription","bioTwitter","Bio","_2975466106","bioWidth","author","ind","key","bioitem","avatar","alignImage","Footer","Fragment","bio","FootText","Date","getFullYear","footer","Content","Layout","children","styled_components_browser_esm","container","header","SimpleGatsbyLink","_StyledLink","EpisodeListItem","simplegatsbylink","ml","fontStyle","pl","shortExcerpt","EpisodeList","episodelistitem","divider"],"mappings":"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","file":"component---src-pages-episodes-js-6fc2d7349956d004734c.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport { Flex, Text, Box } from 'rebass';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport EpisodeList from '../components/episodelist';\nimport Divider from '../components/divider';\n\nclass AllEpisodesIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const thePosts = data.allMarkdownRemark.edges.map((post) => {\n      return (\n        {\n          number: post.node.frontmatter.number,\n          title: post.node.frontmatter.title,\n          slug: post.node.fields.slug,\n          date: post.node.frontmatter.date,\n          excerpt: post.node.excerpt\n        }\n      )\n    });\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n          />\n        <EpisodeList posts={thePosts} />\n      </Layout>\n    );\n  }\n}\n\nexport default AllEpisodesIndex;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            number\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/mountains-4f18cc1481d8cf98668cdf2d38ea2280.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            authors {\n              name\n              description\n              social {\n                twitter\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  console.log(site);\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.authors[0].social.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Flex, Box } from 'rebass';\n\nconst Divider = props => (\n  <Flex flexWrap=\"flex\" justifyContent=\"center\">\n    <Box width={props.width} my={2}>\n      <StyledHr />\n    </Box>\n  </Flex>\n);\n\nexport default Divider;\n\nconst StyledHr = styled.hr`\n  background-color: red;\n`;\n","import React from 'react';\nimport { Box } from 'rebass';\n\nconst Container = props => (\n  <Box\n    {...props}\n    mx=\"auto\"\n    p={2}\n    css={{\n      maxWidth: '1024px',\n      minWidth: '320px',\n    }}\n  />\n);\n\nexport default Container;\n","import { createGlobalStyle } from 'styled-components';\nimport mountains from '../assets/mountains.png';\n\nconst theme = {\n  breakpoints: ['26em', '40em', '54em'],\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64],\n  colors: {\n    blue: '#07c',\n    lightgray: '#f6f6ff',\n    flagred: '#eb2d37'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  fonts: {\n    serif: 'Libre Baskerville, Times New Roman, serif',\n    sans: 'system-ui, sans-serif',\n    mono: 'Menlo, monospace',\n  },\n  shadows: {\n    small: '0 0 4px rgba(0, 0, 0, .125)',\n    large: '0 0 24px rgba(0, 0, 0, .125)',\n  },\n};\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Libre+Baskerville:400,700');\n  html, body {\n    padding: 0;\n    margin: 0;\n    font-family: Helvetica, Arial, sans-serif;\n    background-image: url(${mountains});\n    background-size: cover;\n    background-position: center;\n    background-attachment: fixed;\n    box-sizing: border-box;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  a {\n    text-decoration: none;\n  }\n  ul {\n    margin: 0 auto;\n    padding: 0 auto;\n  }\n  ul p {\n    margin: 0 auto;\n  }\n`;\n\nexport default theme;\nexport { GlobalStyle };\n","import React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport { Flex, Box, Heading } from \"rebass\";\nimport styled from 'styled-components';\n\n// Logo styling trick allows automatic resizing,\n// but if container is larger than image size, the image won't center\n// Responsive widths are chosen to center the logo and keep it responsive\n\nconst Title = () => {\n  const cbpSeal = '/cbp-logo-400.png';\n  const { site } = useStaticQuery(titleQuery);\n  const siteTitle = site.siteMetadata.title;\n  const siteDescription = site.siteMetadata.description;\n  return(\n    <Flex\n      width={1}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      flexDirection=\"column\">\n      <Box\n        width={[.5, null, 300]}\n        flex=\"0 1 auto\"\n      >\n        <Link to='/'>\n          <Logo\n            src={cbpSeal}\n            alt={`${siteTitle} Seal`}\n          />\n        </Link>\n      </Box>\n      <Heading\n        fontSize={[3]}\n        color=\"flagred\"\n        css={{textAlign: 'center'}}>\n        {siteDescription}\n      </Heading>\n    </Flex>\n  )\n}\n\nconst titleQuery = graphql`\n  query TitleQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`;\n\nexport default Title;\n\nconst Logo = styled.img`\n  max-width: 100%;\n  height: auto;\n`\n","import React from 'react';\nimport { Flex, Link, Text, Button } from 'rebass';\nimport styled from 'styled-components';\nimport { Icon } from '@iconify/react';\nimport iTunesNoteIcon from \"@iconify/react/fa-brands/itunes-note\";\nimport googlePlayIcon from \"@iconify/react/fa-brands/google-play\";\nimport stitcherIcon from \"@iconify/react/simple-icons/stitcher\";\nimport rssIcon from \"@iconify/react/fa-solid/rss\";\nimport twitterIcon from \"@iconify/react/fa-brands/twitter\";\n\n\nconst LinkBar = props => {\n  const rssFeed =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:8000/rss.xml'\n      : 'https://canadianborderpatrol.com/rss.xml';\n  const links = [\n    {\n      text: \"iTunes\",\n      href: \"https://podcasts.apple.com/ca/podcast/canadian-border-patrol/id1463751515\",\n      icon: iTunesNoteIcon,\n    },\n    {\n      text: \"Google Play\",\n      href: \"https://play.google.com/music/listen?u=0#/ps/Ijfvdnyyavpl4jo4witxkakz5f4\",\n      icon: googlePlayIcon,\n    },\n    {\n      text: \"Stitcher\",\n      href: \"https://www.stitcher.com/podcast/canadian-border-patrol?refid=stpr\",\n      icon: stitcherIcon,\n    },\n    {\n      text: \"RSS\",\n      href: rssFeed,\n      icon: rssIcon,\n    },\n    {\n      text: \"Twitter\",\n      href: \"https://podcasts.apple.com/ca/podcast/canadian-border-patrol/id1463751515\",\n      icon: twitterIcon,\n    }\n  ]\n  return (\n    <Flex\n      flexWrap=\"wrap\"\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      p={2}\n      pr={2}\n    >\n      {links.map((link, index, array) => {\n        return (\n          <Button bg='flagred' m={1}>\n            <Link\n              color='white'\n              href={link.href}>\n              <Icon icon={link.icon} /> {link.text}\n            </Link>\n          </Button>\n        )\n      })}\n    </Flex>\n  );\n}\n\nexport default LinkBar;\n","import React from 'react';\nimport { Flex, Box } from 'rebass';\nimport styled from 'styled-components';\nimport Title from './title';\nimport LinkBar from './linkbar';\n\n\nconst Header = () => {\n  return(\n    <Background>\n      <Flex\n        width={1}\n        flexWrap='noflex'\n        flexDirection='column'\n        alignItems='center'>\n        <Title />\n        <LinkBar />\n      </Flex>\n    </Background>\n  )\n}\n\nexport default Header;\n\nconst Background = styled.div`\n  background-color: #FFFFFFE6;\n  padding: .5rem .5rem;\n  margin-bottom: .5rem;\n  border-radius: 15px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, Box, Text, Link } from 'rebass';\nimport styled from 'styled-components';\nimport { Icon } from '@iconify/react';\nimport twitterIcon from \"@iconify/react/fa-brands/twitter\";\n\nconst BioItem = props => {\n  return (\n    <Flex\n      flexWrap=\"nowrap\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      fontSize={[1, 2, 3]}\n    >\n      <Box>\n        <Avatar src={props.bioImage} alt={props.bioName} />\n      </Box>\n      <Text\n        mt={1}\n        mb={2}\n        fontWeight=\"bold\"\n        css={{ textDecoration: 'underline' }}\n      >\n        {props.bioName}\n      </Text>\n      <Text mb={1}>{props.bioDescription}</Text>\n      <Link href={`https://twitter.com/${props.bioTwitter}`}>\n        <Icon icon={twitterIcon} />\n      </Link>\n    </Flex>\n  );\n};\n\nBioItem.propTypes = {\n  bioImage: PropTypes.string,\n  bioName: PropTypes.string,\n  bioDescription: PropTypes.string,\n  bioTwitter: PropTypes.string,\n};\n\nexport default BioItem;\n\nconst Avatar = styled.img`\n  width: auto;\n  max-height: 100px;\n  align-self: 'start';\n  border-radius: 100%;\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Flex, Box } from 'rebass';\nimport BioItem from './bioitem';\n\nconst Bio = () => {\n  const { site } = useStaticQuery(bioQuery);\n  const { authors } = site.siteMetadata;\n  const bioWidth = 1 / authors.length;\n  return (\n    <Flex flexWrap=\"nowrap\" flexDirection=\"row\">\n      {authors.map((author, ind) => (\n        <Box\n          flex=\"1 1 auto\"\n          mx={2}\n          width={bioWidth}\n          key={`author-${ind}`}\n        >\n          <BioItem\n            key={`${author.name}-${ind}`}\n            bioImage={`/${author.avatar}`}\n            bioName={author.name}\n            bioDescription={author.description}\n            bioTwitter={author.social.twitter}\n            alignImage={ind % 2 !== 0 ? 'left' : 'right'}\n          />\n        </Box>\n      ))}\n    </Flex>\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        authors {\n          name\n          description\n          avatar\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import React from 'react';\nimport { Box } from 'rebass';\nimport styled from 'styled-components';\n\nimport Bio from './bio';\n\nconst Footer = () => {\n  return(\n    <>\n      <Bio />\n      <Box fontSize={0}>\n        <FootText>© {new Date().getFullYear()} Canadian Border Patrol</FootText>\n      </Box>\n    </>\n  );\n}\n\nexport default Footer;\n\nconst FootText = styled.footer`\n  text-align: center;\n`;\n","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Container from './container';\nimport theme, { GlobalStyle } from '../theme';\nimport Header from './header';\nimport Footer from './footer';\n\nconst Layout = ({ children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <GlobalStyle />\n        <Header />\n        <Content>\n          <main>{children}</main>\n          <Footer />\n        </Content>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default Layout;\n\nconst Content = styled.div`\n  background-color: #FFFFFFE6;\n  padding: 3rem 3rem;\n  border-radius: 15px;\n`;\n","import React from 'react';\nimport { Text } from 'rebass';\nimport { Link } from 'gatsby';\n\nconst SimpleGatsbyLink = props => (\n  <Text\n    textAlign={props.textAlign}\n    fontSize={props.fontSize}\n    fontWeight={props.fontWeight}\n  >\n    <Link\n      to={props.to}\n      css={{\n        textDecoration: 'none',\n        color: 'inherit'\n      }}\n    >\n      {props.children}\n    </Link>\n  </Text>\n);\n\nexport default SimpleGatsbyLink;\n","import React from 'react';\nimport { Flex, Box, Text } from 'rebass';\n\nimport SimpleGatsbyLink from './simplegatsbylink';\n\nconst EpisodeListItem = props => (\n  <Flex flexWrap=\"nowrap\" flexDirection=\"column\" mx={2}>\n    <Flex flexWrap=\"wrap\" flexDirection=\"row\" alignItems=\"baseline\" mb={2}>\n      <SimpleGatsbyLink fontSize={[3, 4, 5]} fontWeight=\"bold\" to={props.slug}>\n        {props.title}\n      </SimpleGatsbyLink>\n      <Text fontSize={[0, 1, 2]} ml={2} css={{ fontStyle: 'italic' }}>\n        Ep. {props.number} - {props.date}\n      </Text>\n    </Flex>\n    <Text fontSize={[1, 2, 3]} pl={[2, 3, 4]}>{props.shortExcerpt}</Text>\n  </Flex>\n);\n\nexport default EpisodeListItem;\n","import React from 'react';\nimport { Flex } from 'rebass';\n\nimport EpisodeListItem from './episodelistitem';\nimport Divider from './divider';\n\nconst EpisodeList = props => (\n  <Flex flexWrap=\"nowrap\" flexDirection=\"column\" justifyContent=\"center\">\n    {/* <Divider width={1 / 2} /> */}\n    {props.posts.map(post => (\n      <React.Fragment key={post.slug}>\n        <EpisodeListItem\n          number={post.number}\n          title={post.title}\n          date={post.date}\n          slug={post.slug}\n          shortExcerpt={post.excerpt}\n        />\n        <Divider width={1 / 2} />\n      </React.Fragment>\n    ))}\n  </Flex>\n);\n\nexport default EpisodeList;\n"],"sourceRoot":""}